<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>概述 on Codist</title>
    <link>https://blog.codist.me/homo/</link>
    <description>Recent content in 概述 on Codist</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator>
    <language>zh-Hans</language>
    <copyright>&amp;copy; 2016-{year} Codist</copyright>
    <lastBuildDate>Thu, 13 Jun 2019 00:00:00 +0800</lastBuildDate>
    
	    <atom:link href="https://blog.codist.me/homo/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>安装</title>
      <link>https://blog.codist.me/homo/get-started/</link>
      <pubDate>Thu, 13 Jun 2019 00:00:00 +0800</pubDate>
      
      <guid>https://blog.codist.me/homo/get-started/</guid>
      <description>

&lt;p&gt;首先获取Homo源码:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/countstarlight/homo.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;开始安装依赖&lt;/p&gt;

&lt;h1 id=&#34;1-安装依赖&#34;&gt;1.安装依赖&lt;/h1&gt;

&lt;h2 id=&#34;1-1-系统依赖&#34;&gt;1.1 系统依赖&lt;/h2&gt;

&lt;h3 id=&#34;1-1-1-portaudio&#34;&gt;1.1.1 PortAudio&lt;/h3&gt;

&lt;p&gt;Homo 使用 &lt;code&gt;PortAudio&lt;/code&gt; 从音频硬件读取和处理音频，这个库通常已经被安装&lt;/p&gt;

&lt;p&gt;Debian / Ubuntu:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install portaudio
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Arch Linux / Manjaro Linux:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 需要安装 pulseaudio-alsa 使得和 pulseaudio 一起工作时不会造成崩溃
sudo pacman -S portaudio pulseaudio-alsa
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-1-2-pocketsphinx&#34;&gt;1.1.2 PocketSphinx&lt;/h3&gt;

&lt;p&gt;Homo 借助 &lt;code&gt;PocketSphinx&lt;/code&gt; 实现离线唤醒，控制语音录制开始和结束的时机&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;a) 安装 &lt;code&gt;sphinxbase&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;PocketSphinx&lt;/code&gt; 依赖 &lt;code&gt;sphinxbase&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Linux / Unix:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/cmusphinx/sphinxbase.git
cd sphinxbase
./autogen.sh
./configure
make -j 4
sudo make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;b) 安装 &lt;code&gt;PocketSphinx&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Linux / Unix:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone https://github.com/cmusphinx/pocketsphinx.git
cd pocketsphinx
./autogen.sh
./configure
sudo make install
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;1-2-python依赖&#34;&gt;1.2 Python依赖&lt;/h2&gt;

&lt;p&gt;推荐使用 &lt;code&gt;virtualenv&lt;/code&gt; 为每个项目创建一个独立的python环境&lt;/p&gt;

&lt;p&gt;Python推荐使用&lt;code&gt;3.6.8&lt;/code&gt;版本&lt;/p&gt;

&lt;p&gt;目前自然语言理解和文本情感分析是两个单独的模块，稍后会合并到一起，以简化操作&lt;/p&gt;

&lt;h3 id=&#34;1-2-1-安装文本情感分析引擎的依赖&#34;&gt;1.2.1 安装文本情感分析引擎的依赖&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd homo/sentiment
# 创建一个python3.6的环境
# 需要已经安装有pyhton3.6
virtualenv --python=python3.6 env3.6
# 进入创建的环境
source env3.6/bin/activate
# 安装依赖
pip install -r requirements.txt
# 使用国内镜像
# pip install -i https://pypi.tuna.tsinghua.edu.cn/simple -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;1-2-2-安装自然语言理解引擎的依赖&#34;&gt;1.2.2 安装自然语言理解引擎的依赖&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd homo/nlu
# 创建一个python3.6的环境
# 需要已经安装有pyhton3.6
virtualenv --python=python3.6 env3.6
# 进入创建的环境
source env3.6/bin/activate
# 安装依赖
pip install -r requirements.txt
# 使用国内镜像
# pip install -i https://pypi.tuna.tsinghua.edu.cn/simple -r requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;2-编译主程序&#34;&gt;2.编译主程序&lt;/h1&gt;

&lt;p&gt;这需要你确保已经配置好&lt;a href=&#34;https://golang.org/&#34; target=&#34;_blank&#34;&gt;Go&lt;/a&gt;开发环境:&lt;/p&gt;

&lt;p&gt;Linux:&lt;/p&gt;

&lt;p&gt;从 &lt;a href=&#34;https://golang.org/dl/&#34; target=&#34;_blank&#34;&gt;https://golang.org/dl/&lt;/a&gt;下载 Linux 对应的&lt;code&gt;.tar.gz&lt;/code&gt;文件，假设下载到的是 &lt;code&gt;go1.12.6.linux-amd64.tar.gz&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# 直接解压缩到 /usr/local
sudo tar -C /usr/local -xzf go1.12.6.linux-amd64.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;编译 &lt;code&gt;homo-webview&lt;/code&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd homo
make webview
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;生成的文件为：&lt;code&gt;homo-webview&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
