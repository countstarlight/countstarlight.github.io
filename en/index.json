[{"authors":["admin"],"categories":null,"content":"Nelson Bighetti is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed neque elit, tristique placerat feugiat ac, facilisis vitae arcu. Proin eget egestas augue. Praesent ut sem nec arcu pellentesque aliquet. Duis dapibus diam vel metus tempus vulputate.\n","date":1554595200,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1555459200,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://blog.codist.me/en/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/en/authors/admin/","section":"authors","summary":"Nelson Bighetti is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed neque elit, tristique placerat feugiat ac, facilisis vitae arcu. Proin eget egestas augue. Praesent ut sem nec arcu pellentesque aliquet.","tags":null,"title":"Nelson Bighetti","type":"authors"},{"authors":null,"categories":null,"content":" Flexibility This feature can be used for publishing content such as:\n Online courses Project or software documentation Tutorials  The courses folder may be renamed. For example, we can rename it to docs for software/project documentation or tutorials for creating an online course.\nDelete tutorials To remove these pages, delete the courses folder and see below to delete the associated menu link.\nUpdate site menu After renaming or deleting the courses folder, you may wish to update any [[main]] menu links to it by editing your menu configuration at config/_default/menus.toml.\nFor example, if you delete this folder, you can remove the following from your menu configuration:\n[[main]] name = \u0026quot;Courses\u0026quot; url = \u0026quot;courses/\u0026quot; weight = 50  Or, if you are creating a software documentation site, you can rename the courses folder to docs and update the associated Courses menu configuration to:\n[[main]] name = \u0026quot;Docs\u0026quot; url = \u0026quot;docs/\u0026quot; weight = 50  Update the docs menu If you use the docs layout, note that the name of the menu in the front matter should be in the form [menu.X] where X is the folder name. Hence, if you rename the courses/example/ folder, you should also rename the menu definitions in the front matter of files within courses/example/ from [menu.example] to [menu.\u0026lt;NewFolderName\u0026gt;].\n","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536451200,"objectID":"59c3ce8e202293146a8a934d37a4070b","permalink":"https://blog.codist.me/en/courses/example/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/en/courses/example/","section":"courses","summary":"Learn how to use Academic's docs layout for publishing online courses, software documentation, and tutorials.","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":null,"content":" The Academic framework enables you to easily create a beautifully simple website using the Hugo static site generator in under 10 minutes 🚀\nWhy Academic? Learn why Academic was created and the benefits of using it to power your site.\nFirst steps To get the most out of Academic, start by reviewing a few introductory topics:\nSetup - Install Academic for your platform.\nQuick Start and Settings - Customize your website.\nAdd content - Add content to your homepage such as blog posts, projects, talks, or publications.\nCommunity - Connect with the Academic and Hugo community.\n","date":1461081600,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1504368000,"objectID":"4cdd37113783e47641dd300543c94e1b","permalink":"https://blog.codist.me/en/docs/","publishdate":"2016-04-20T00:00:00+08:00","relpermalink":"/en/docs/","section":"docs","summary":"The Academic framework enables you to easily create a beautifully simple website using the Hugo static site generator in under 10 minutes 🚀\nWhy Academic? Learn why Academic was created and the benefits of using it to power your site.\nFirst steps To get the most out of Academic, start by reviewing a few introductory topics:\nSetup - Install Academic for your platform.\nQuick Start and Settings - Customize your website.","tags":null,"title":"Getting started","type":"docs"},{"authors":null,"categories":null,"content":" In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"74533bae41439377bd30f645c4677a27","permalink":"https://blog.codist.me/en/courses/example/example1/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/en/courses/example/example1/","section":"courses","summary":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim.","tags":null,"title":"Example Page 1","type":"docs"},{"authors":null,"categories":null,"content":" Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\nTip 4 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1557010800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1557010800,"objectID":"1c2b5a11257c768c90d5050637d77d6a","permalink":"https://blog.codist.me/en/courses/example/example2/","publishdate":"2019-05-05T00:00:00+01:00","relpermalink":"/en/courses/example/example2/","section":"courses","summary":"Here are some more tips for getting started with Academic:\nTip 3 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus.","tags":null,"title":"Example Page 2","type":"docs"},{"authors":null,"categories":null,"content":" You can choose from one of the following four methods to install:\n one-click install using your web browser (recommended) install on your computer using Git with the Command Prompt/Terminal app install on your computer by downloading the ZIP files install on your computer with RStudio  After installing, check out the guide to personalizing your site.\nInstall with web browser Install Academic with Netlify\n One-click install of Academic creates an academic-kickstart repository in your GitHub or GitLab account Netlify will provide you with a customizable URL to access your new site, or get your own domain Shortly after editing content in your repository, your site will automatically update To edit your site in a Markdown editor on your computer, perform the steps in the Install with Git section below  Once you have followed the link above to automatically install Academic, head on over to your new academic-kickstart repository in your GitHub (or GitLab) account and personalize your site by editing the files in config/_default/. Shortly after saving (i.e. committing a file), your site will automatically update.\nView the Homepage Builder and [Content]() guides to learn how to add widgets and content. For inspiration, refer to the Markdown content which powers the Demo\nInstall with Git Prerequisites:\n Download and install Git Download and install Hugo Extended v0.55.6+  Install:\n Fork the Academic Kickstart repository to create a new website  If you already created your site with Netlify, then skip this step  Clone your fork to your computer with Git, replacing sourcethemes in the command below with your GitHub username:\ngit clone https://github.com/sourcethemes/academic-kickstart.git My_Website  Initialize the theme:\ncd My_Website git submodule update --init --recursive   Now you\u0026rsquo;re ready to personalize and view your site.\nInstall with ZIP Prerequisites:\n Download and install Hugo Extended v0.55.6+  Install:\n Download and extract Academic Kickstart Download and extract the Academic theme files from the hugo-academic-master folder to the themes/academic/ folder in Academic Kickstart  Now you\u0026rsquo;re ready to personalize and view your site.\nInstall with RStudio  Follow the Install with Git instructions above if you are confident with Git, or otherwise Install with ZIP.  Skip the Install Hugo step as we\u0026rsquo;ll use RStudio to install Hugo  Open RStudio, installing the Blogdown and Hugo dependencies:\ninstall.packages(\u0026quot;blogdown\u0026quot;) blogdown::install_hugo(force = TRUE)  Open academic.Rproj from the Academic Kickstart folder in Step 1\n Workaround a Blogdown bug by moving config/_default/config.toml to config.toml at your project root\n In the RStudio menu bar, choose Addins \u0026gt; Serve Site (clicking this button will call blogdown:::serve_site())\n Paste the local URL which RStudio provides (e.g. http://127.0.0.1:4321) into your web browser to preview your new site Avoid using the integrated RStudio web browser as it is very outdated and buggy   Now you\u0026rsquo;re ready to personalize your site.\nNote that R content should be saved with the .Rmarkdown file extension rather than .Rmd.\nDemo content For inspiration, refer to the Markdown content which powers the Demo.\nIf you wish to initialise your site with the demo content, copy the contents of the themes/academic/exampleSite/ folder to your website root folder, overwriting existing files if necessary. The exampleSite folder contains an example config file and content to help you get started. The following command can be used to accomplish this:\ncp -av themes/academic/exampleSite/* .  Next steps Follow the step by step guide to setup your new site.\n","date":1461081600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461081600,"objectID":"64407d3e6d5ef382426bdfbcae040c6a","permalink":"https://blog.codist.me/en/docs/install/","publishdate":"2016-04-20T00:00:00+08:00","relpermalink":"/en/docs/install/","section":"docs","summary":"You can choose from one of the following four methods to install:\n one-click install using your web browser (recommended) install on your computer using Git with the Command Prompt/Terminal app install on your computer by downloading the ZIP files install on your computer with RStudio  After installing, check out the guide to personalizing your site.\nInstall with web browser Install Academic with Netlify\n One-click install of Academic creates an academic-kickstart repository in your GitHub or GitLab account Netlify will provide you with a customizable URL to access your new site, or get your own domain Shortly after editing content in your repository, your site will automatically update To edit your site in a Markdown editor on your computer, perform the steps in the Install with Git section below  Once you have followed the link above to automatically install Academic, head on over to your new academic-kickstart repository in your GitHub (or GitLab) account and personalize your site by editing the files in config/_default/.","tags":null,"title":"Install","type":"docs"},{"authors":null,"categories":null,"content":" This quick tutorial will show you how to setup and use Academic.\nChoose the right theme for you Check out the available color themes and have fun choosing a design you love.\nOnce you have settled on a theme, edit your config/_default/params.toml file in a text editor and set the color_theme option to the name of the chosen theme.\n If you are unfamiliar with setting options in a TOML file, you can learn more about this human-friendly configuration syntax here.    In older versions, the configuration is stored entirely in one file named config.toml.   The following font styles are also available and can be set by the font option:\n default (modern) classic (original Academic v1 style) playfair (traditional serif)  Don\u0026rsquo;t worry if you are not 100% happy with the colors or font yet, as these can be fully customized later on.\nChoose the right layout for you Academic has a template for you whether you are you creating a website for your CV, academic research, blog, course, lab, business, photography, portfolio, or restaurant!\nWhat kind of content would you like to publish? Academic supports:\n Pages: any general content Widget Pages: pages that can consist of numerous widgets, such as the homepage Posts: blog posts or news Projects: publish your portfolio or projects Online Courses: share knowledge online Software Documentation: document your software projects Talks: publish any talks which you are presenting Slides: write slides very efficiently with Markdown, present them at your talk, and share them online Publications: import your research publications from BibTeX  Once you have decided on the type of content that you would like to publish, take a look at the available homepage widgets and consider which ones would be most relevant to you.\nThen, open your content/home/ folder and set the active parameter to either true or false for each widget depending on if you wish to display it or not. Widgets that you don\u0026rsquo;t need can alternatively be deleted rather than setting active to false.\nNext, let\u0026rsquo;s position the widgets according to your preference. To move a widget up or down, increase or decrease the value of the weight parameter in each widget which you activated. The widgets will be ordered in ascending order of these weights and there is no need for the weights to be consecutive numbers.\n If your content/home/ folder is empty, populate it from the example.   Customize it After selecting a theme and a layout, make it your own.\nCore parameters The core parameters for the website can be edited in the config/_default/params.toml file:\n Edit your personal/business details under the Contact Widget section  Any details entered here will be displayed in the Contact widget (if used) To hide a contact field, simply clear the value to \u0026quot;\u0026quot; or comment the line out by prefixing it with a hash (#) The contact form can be configured separately in the front matter of the Contact widget itself  If you write technical content, consider setting highlight = true and/or math = true, otherwise set them to false  If you write R code, uncomment highlight_languages (remove the # line prefix) so that highlight_languages = [\u0026quot;r\u0026quot;]   Introduce yourself By default, a superuser is created with the username admin and corresponding user profile located at content/authors/admin/_index.md. Let\u0026rsquo;s open this file in a text editor and edit this file to make it your profile:\n Edit your display name (typically your full name), your role, and write one sentence to describe yourself in bio Edit the organizations that you are affiliated with, or set this to [] to hide it List your interests or hobbies in interests, or set this to [] to hide it List your main qualifications using the education \u0026ndash;\u0026gt; courses block  These blocks can be created or deleted as required To hide qualifications, delete these blocks or comment out the lines by prefixing them with a hash (#)  Add your social or academic networking links  These are defined as instances of social and can be created or deleted as required   Now let\u0026rsquo;s add a biography or some fun facts about you after the front matter (i.e. after the last +++ line). You can utilize Markdown and shortcodes for formatting.\nTo display an avatar, place a square cropped portrait photo named avatar into your profile folder at content/authors/admin/, overwriting the example image. Alternatively, if you have an existing Gravatar/Wordpress avatar, you can use it by setting gravatar to true in config/_default/params.toml and entering your associated email address in content/authors/admin/_index.md. Note that you can delete the example avatar image to disable the avatar feature.\nOnce you have setup your account, your username can be referenced in the authors field of content, as per the demo post.\n The superuser username can be changed from admin by renaming the admin folder. Usernames must be lowercase with any spaces replaced with hyphens (-). The ASCII alphanumeric character set is recommended.    If you change a username, you may wish to update any references to it from the author field of the About widget (content/home/about.md) and the authors field in the front matter of your content.   Menu The navigation menu can be edited in the config/_default/menu.toml file:\nThe [[main]] entries define the navigation links at the top of the website. They can be added or removed as desired, based on the layout which you chose above.\nTo link to a section of the homepage, use the form #\u0026lt;section-filename\u0026gt; where \u0026lt;section-filename\u0026gt; is the filename (without .md extension). For example, #posts references a section with filename posts.md. You can rename your section files in content/home/, just remember to use a dash (-) instead of spaces in the filename.\n To create a dropdown sub-menu, add identifier = \u0026quot;something\u0026quot; to the parent item and parent = \u0026quot;something\u0026quot; to the child item.   Read more about Hugo\u0026rsquo;s menu system here.\nAdd your content Refer to our guide on managing content to create your own content such as blog posts, publications, talks, and projects.\nRemove any unused example pages Delete any unused example pages.\n You will likely want to keep the _index.md files (notice the underscore prefix) as they configure the archive page for each content type (e.g. an index of all your blog posts).   View your site If you installed on your computer with Git or ZIP, view your new website by running the hugo server command.\nIf you installed using RStudio, run blogdown::serve_site() to preview your site in your web browser. We recommend previewing your site in your normal web browser as the in-built RStudio web browser is very outdated and buggy.\nNow visit localhost:1313 and your new Academic powered website will appear. Otherwise, if using Netlify, they will provide you with your URL.\nDeploy your site Before deploying your site, there are some final options we can set in config/_default/config.toml:\n Set title to your desired website title, such as your name or business name Set baseurl to your website URL (this will be provided by your host such as Netlify) - come back to this option later if you don\u0026rsquo;t have your URL/domain yet  Publish your site to the world by following the deployment steps.\nSupport Academic Has Academic helped you?\nAcademic is a free open source platform. Please kindly consider supporting further development.\n","date":1461081600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461081600,"objectID":"dfd1f9f55ff768a6f80a74c1b02560c8","permalink":"https://blog.codist.me/en/docs/get-started/","publishdate":"2016-04-20T00:00:00+08:00","relpermalink":"/en/docs/get-started/","section":"docs","summary":"This quick tutorial will show you how to setup and use Academic.\nChoose the right theme for you Check out the available color themes and have fun choosing a design you love.\nOnce you have settled on a theme, edit your config/_default/params.toml file in a text editor and set the color_theme option to the name of the chosen theme.\n If you are unfamiliar with setting options in a TOML file, you can learn more about this human-friendly configuration syntax here.","tags":null,"title":"Getting started","type":"docs"},{"authors":null,"categories":null,"content":" Building beautiful pages is easy with Academic\u0026rsquo;s widget system. No programming is required!\nLoading pre-made layouts is a great way to kickstart your new homepage. Academic Kickstart comes with some popular Sections preconfigured for this purpose. A Widget can be added inside each Section. Hence, you can have multiple instances of widgets, such as listing recent pages of different content types or categories.\nWidgets empower you to fully customize your site. They display as sections on the homepage or on widget pages. They can be added, removed, and positioned as desired.\nAcademic comes with the following widgets built-in. Additionally, third-party widgets can also be developed and installed.\n Blank - add any elements such as an image gallery Hero - encourage visitors to perform an action (CTA) About - introduce yourself Featurette - showcase skills or key features of a product Experience - list your professional experience on a timeline Accomplishments - showcase your (online learning) certificates and other achievements Pages - display recent blog posts, talks, and publications Featured - display featured (sticky) blog posts, talks, and publications Contact - display your contact details, including an optional contact form and map Portfolio - showcase your work or product features in a filterable portfolio Tag cloud - enable visitors to discover popular topics People - introduce your team members Slider (carousel) - promote a lot of content in a small space  Using Widgets Academic Kickstart includes instances of all the built-in widgets. Delete the sections in content/home/ that you don\u0026rsquo;t need (or set active = false in their front matter) and personalize the front matter options of the sections that you wish to keep by opening them in a text editor.\nThe sections (widget instances) in your home/ folder can be renamed to anything you like (but use hyphens instead of spaces). Just remember to update your main menu in config/_default/menus.toml if you have a link to the widget instance.\nAdd a widget to the homepage To add a widget manually, copy the relevant widget from themes/academic/exampleSite/content/home/ to your content/home/ folder.\nWidget identifiers are set to their respective filenames, so a content/home/about.md widget can be linked from the navigation bar by setting the relevant URL as \u0026quot;#about\u0026quot; in config/_default/menu.toml.\nThis means that if you want to use multiple instances of a widget, each widget will be assigned a unique ID based on the filename that you set. You can then use that ID for linking, like in the above example.\nRemove a widget from the homepage If you do not require a particular widget, you can simply delete any associated files from the content/home/ folder.\nTo remove a navigation link from the top of the page, remove the associated [[main]] entry in config/_default/menu.toml.\nPosition sections The order that the homepage widgets are displayed in is defined by the weight parameter in each of the files in the content/home/ directory. The widgets are displayed in ascending order of their weight, so you can simply edit the weight parameters as desired.\nLink to a section You may wish to add a navigation link to the top of the page that points to a section. This can be achieved by adding something similar to the following lines to your config/_default/menu.toml, where the URL will consist of the first title word in lowercase:\n[[main]] name = \u0026quot;Research\u0026quot; # A name for the link. url = \u0026quot;#research\u0026quot; # URL of the section. weight = 10 # Position of the link in the menu.  Develop a new widget This section guides developers to create custom widgets using HTML and CSS. You may also be interested in the Blank widget.\nLet\u0026rsquo;s create a new widget, the Awesome widget. First create the layouts/partials/widgets/ folder structure in the root of your site (not in themes/academic/).\nNext, create the widget file awesome.html in your new layouts/partials/widgets/ folder.\nNow we can open awesome.html in a text editor and create our desired layout using HTML and Hugo\u0026rsquo;s Go Templating. Styling can be performed by adding new CSS styles via the Custom CSS feature. In this example, let\u0026rsquo;s add the following code to our awesome.html widget which will display the section content in a large blue font:\n\u0026lt;div style=\u0026quot;font-size: 2rem; color: blue\u0026quot;\u0026gt; {{ .page.Content }} \u0026lt;/div\u0026gt;  Finally, we will instantiate the widget on the website by creating a Markdown file, my-widget.md in content/home/ and adding the following front matter to the file:\n+++ widget = \u0026quot;awesome\u0026quot; # The name of the widget that you created. headless = true # This file represents a page section. active = true # Activate this widget? true/false weight = 1 # Order that this section will appear in. +++ Everything is awesome!  Good luck creating your own widgets and feel free to share them with the community. You can also open a PR on Github for your widget to be considered for integration as a core Academic widget. For inspiration, you can check out how the in-built widgets were made.\nPersonalizing Widgets The parameters for each section consist of general options in addition to widget-specific options. When you open a section installed in the content/home/ folder in a text editor, the available options will be displayed in the front matter (between the pair of +++).\nGenerally, if you write any text in the file body after a widget\u0026rsquo;s front matter, your text will appear at the top of the widget. This can be useful for introducing the widget content.\nA title and subtitle can be set for most widgets using the title and subtitle options respectively.\nColumns The number of columns in a section can be configured for the Blank and Portfolio widgets. Valid options are:\n \u0026quot;1\u0026quot;: a single full-width column with the section content appearing directly underneath the section title (if set) \u0026quot;2\u0026quot;: two columns in the classic Academic layout with the the section title appearing on the left and the section content appearing on the right  For example:\n[design] # Choose how many columns the section has. Valid values: 1 or 2. columns = \u0026quot;1\u0026quot;  View Several widgets have a view option to let you choose the layout of the widget. The following layouts are available:\n 1 = List (previously Simple) 2 = Compact (previously Stream) 3 = Card (previously Detailed) 4 = Citation (previously APA and MLA), only available for publications  Optionally, edit the value of citation_style in params.toml to APA or MLA  5 = Showcase (large images), only available for projects  Icons Academic enables you to use a wide range of icons from Font Awesome and Academicons.\nIcon pack \u0026ldquo;fab\u0026rdquo; includes the following brand icons:\n twitter, weixin, weibo, linkedin, github, facebook, pinterest, twitch, youtube, instagram, soundcloud See all icons  Icon packs \u0026ldquo;fas\u0026rdquo; and \u0026ldquo;far\u0026rdquo; include the following general icons:\n fax, envelope (for email), comments (for discussion forum) See all icons  Icon pack \u0026ldquo;ai\u0026rdquo; includes the following academic icons:\n cv, google-scholar, arxiv, orcid, researchgate, mendeley See all icons  Background A background can easily be applied to any homepage section. Choose from a range of background options including color, gradient, and image. Then choose either a dark or light text color, by setting text_color_light.\nOnce you have chosen the type of background, delete or comment out (by prefixing #) any unused options. For example, if you choose an image background, set the image* and text_color_light options and delete the rest (delete color and gradient*). For colors, any HTML color name or Hex value is valid.\nThe following excerpt shows the front matter structure for defining a background:\n[background] # Background color. color = \u0026quot;navy\u0026quot; # Background gradient. gradient_start = \u0026quot;#4bb4e3\u0026quot; gradient_end = \u0026quot;#2b94c3\u0026quot; # Background image. image = \u0026quot;background.jpg\u0026quot; # Name of image in `static/img/`. image_darken = 0.6 # Darken the image? Range 0-1 where 0 is transparent and 1 is opaque. # Text color (true=light or false=dark). text_color_light = true  Spacing The spacing of sections can be controlled by specifying padding for the top, right, bottom, and left sides of sections.\nFor example, to make a section more compact, the following parameters can be added to the front matter of a section. This example will reduce the top and bottom spacing of the section to just 20 pixels (px).\n[design.spacing] # Customize the section spacing. Order is top, right, bottom, left. padding = [\u0026quot;20px\u0026quot;, \u0026quot;0\u0026quot;, \u0026quot;20px\u0026quot;, \u0026quot;0\u0026quot;]  Style It\u0026rsquo;s possible to customize the style of a specific instance of a widget with CSS. For example, the font size of a section can be changed.\nFirst, define your custom style in CSS using the CSS Plugin feature.\nTo apply your new style to a widget, set css_class in a widget\u0026rsquo;s front matter. For example css_class = \u0026quot;MY_CSS_CLASS\u0026quot;, where MY_CSS_CLASS is the name of the CSS class which you defined in the previous step.\nCustom CSS code can also be directly applied to a section using the css_style option.\n[advanced] # Custom CSS. css_style = \u0026quot;\u0026quot; # CSS class. css_class = \u0026quot;\u0026quot;  Blank You can use the Blank widget to create your own home page sections. Add page elements, such as an image gallery, and personalize the section with a background etc.\nFor example, a new Markdown file can be created in content/home/ with the following front matter to begin building your new section:\nwidget = \u0026quot;blank\u0026quot; headless = true # This file represents a page section. # ... Put Your Section Options Here (title etc.) ... [design] # Choose how many columns the section has. Valid values: 1 or 2. columns = \u0026quot;1\u0026quot;  The Demo homepage section in the Demo website provides an example of using a Blank widget. For inspiration, the associated file can be found at themes/academic/exampleSite/content/home/demo.md.\nFor advanced use cases, HTML code can even be added to the body of the file.\nYou may also be interested in developing your own widgets.\nExample sections created with the Blank widget  An image gallery created with the Blank widget.    A text block and custom background created with the Blank widget.   Hero The Hero widget can be used to encourage visitors to perform an action (CTA). It\u0026rsquo;s the first thing that visitors see when they visit your website, and it influences the way your visitors feel and behave on your site.\nTypically, the Hero widget is configured to include a hero image, a tagline and a call to action (CTA). There are other possibilities as well though, such as including a secondary action, note, and background.\n The Hero widget can be used to encourage visitors to perform an action (CTA).   Edit the front matter of home/hero.md to add the primary action that you would like your visitors to perform.\nFor example, the following options can be added to your section front matter in order to include the Hero widget:\nwidget = \u0026quot;hero\u0026quot; headless = true # This file represents a page section. # ... Put Your Section Options Here (title etc.) ... # Hero image (optional). Enter filename of an image in the `static/img/` folder. hero_media = \u0026quot;\u0026quot; # Call to action links (optional). # Display link(s) by specifying a URL and label below. Icon is optional for `[cta]`. # Remove a link/note by deleting a cta/note block. [cta] url = \u0026quot;https://sourcethemes.com/academic/docs/install\u0026quot; label = \u0026quot;Get Started\u0026quot; icon_pack = \u0026quot;fas\u0026quot; icon = \u0026quot;download\u0026quot; [cta_alt] url = \u0026quot;https://sourcethemes.com/academic/\u0026quot; label = \u0026quot;View Documentation\u0026quot; # Note. An optional note to show underneath the links. [cta_note] label = \u0026quot;\u0026quot;  In this example, we have associated an icon with the action ([cta] option).\nFeaturette As an individual, use the Featurette widget to showcase your skills and expertise. As an organization, use the widget to highlight the key features of your product or service.\n Showcase personal skills or product features with the Featurette widget.   Edit the front matter of home/skills.md to add your skills/features. Choose from a large range of icons to depict the skills/features.\nFor example, the following options can be added to your section front matter in order to include the Featurette widget:\nwidget = \u0026quot;featurette\u0026quot; headless = true # This file represents a page section. # ... Put Your Section Options Here (title etc.) ... # Showcase personal skills or business features. # Add/remove as many `[[feature]]` blocks below as you like. # For available icons, see: https://sourcethemes.com/academic/docs/widgets/#icons [[feature]] icon = \u0026quot;r-project\u0026quot; icon_pack = \u0026quot;fab\u0026quot; name = \u0026quot;R\u0026quot; description = \u0026quot;90%\u0026quot; [[feature]] icon = \u0026quot;chart-line\u0026quot; icon_pack = \u0026quot;fas\u0026quot; name = \u0026quot;Statistics\u0026quot; description = \u0026quot;100%\u0026quot; [[feature]] icon = \u0026quot;camera-retro\u0026quot; icon_pack = \u0026quot;fas\u0026quot; name = \u0026quot;Photography\u0026quot; description = \u0026quot;10%\u0026quot;  About Introduce yourself to your readers.\n Introduce yourself to your readers with the About widget.   Setup a user profile and then edit the front matter of home/about.md to associate the About widget with your username (name of the folder your created in authors/).\nFor example, the following options can be added to your section front matter in order to include the About widget:\nwidget = \u0026quot;about\u0026quot; headless = true # This file represents a page section. # ... Put Your Section Options Here (title etc.) ... # Choose the user profile to display # This should be the username of a profile in your `content/authors/` folder. author = \u0026quot;admin\u0026quot;  Experience List your professional experience on a timeline.\n With the Experience widget, you can list your professional experience on a timeline.   Add your experience by editing the front matter of home/experience.md. For example:\nwidget = \u0026quot;experience\u0026quot; headless = true # This file represents a page section. # ... Put Your Section Options Here (title etc.) ... # Date format for experience # Refer to https://sourcethemes.com/academic/docs/customization/#date-format date_format = \u0026quot;Jan 2006\u0026quot; # Experiences. # Add/remove as many `[[experience]]` blocks below as you like. # Required fields are `title`, `company`, and `date_start`. # Leave `date_end` empty if it's your current employer. # Begin/end multi-line descriptions with 3 quotes `\u0026quot;\u0026quot;\u0026quot;`. [[experience]] title = \u0026quot;CEO\u0026quot; company = \u0026quot;GenCoin\u0026quot; company_url = \u0026quot;\u0026quot; location = \u0026quot;California\u0026quot; date_start = \u0026quot;2017-01-01\u0026quot; date_end = \u0026quot;\u0026quot; description = \u0026quot;\u0026quot;\u0026quot; Responsibilities include: * Analysing * Modelling * Deploying \u0026quot;\u0026quot;\u0026quot; [[experience]] title = \u0026quot;Professor\u0026quot; company = \u0026quot;University X\u0026quot; company_url = \u0026quot;\u0026quot; location = \u0026quot;California\u0026quot; date_start = \u0026quot;2016-01-01\u0026quot; date_end = \u0026quot;2016-12-31\u0026quot; description = \u0026quot;\u0026quot;\u0026quot;Taught electronic engineering and researched semiconductor physics.\u0026quot;\u0026quot;\u0026quot;   The use of three quote marks (\u0026quot;\u0026quot;\u0026quot;) in the above front matter example is a TOML configuration syntax that enables us to easily write multi-line content in the front matter.   Accomplishments List your accomplishments including certificates and courses attended.\n List your accomplishments including certificates and courses attended.   Add your accomplishments by editing the front matter of home/accomplishments.md. For example:\nwidget = \u0026quot;accomplishments\u0026quot; headless = true # This file represents a page section. # ... Put Your Section Options Here (title etc.) ... # Date format # Refer to https://sourcethemes.com/academic/docs/customization/#date-format date_format = \u0026quot;Jan 2006\u0026quot; # Accomplishments. # Add/remove as many `[[item]]` blocks below as you like. # `title`, `organization` and `date_start` are the required parameters. # Leave other parameters empty if not required. # Begin/end multi-line descriptions with 3 quotes `\u0026quot;\u0026quot;\u0026quot;`. [[item]] organization = \u0026quot;Coursera\u0026quot; organization_url = \u0026quot;https://www.coursera.org\u0026quot; title = \u0026quot;Neural Networks and Deep Learning\u0026quot; url = \u0026quot;\u0026quot; certificate_url = \u0026quot;https://www.coursera.org\u0026quot; date_start = \u0026quot;2018-10-01\u0026quot; date_end = \u0026quot;\u0026quot; description = \u0026quot;\u0026quot; [[item]] organization = \u0026quot;edX\u0026quot; organization_url = \u0026quot;https://www.edx.org\u0026quot; title = \u0026quot;Blockchain Fundamentals\u0026quot; url = \u0026quot;https://www.edx.org/professional-certificate/uc-berkeleyx-blockchain-fundamentals\u0026quot; certificate_url = \u0026quot;https://www.edx.org\u0026quot; date_start = \u0026quot;2018-03-01\u0026quot; date_end = \u0026quot;\u0026quot; description = \u0026quot;Formulated informed blockchain models, hypotheses, and use cases.\u0026quot; [[item]] organization = \u0026quot;DataCamp\u0026quot; organization_url = \u0026quot;https://www.datacamp.com\u0026quot; title = \u0026quot;Object-Oriented Programming in R: S3 and R6 Course\u0026quot; url = \u0026quot;\u0026quot; certificate_url = \u0026quot;https://www.datacamp.com\u0026quot; date_start = \u0026quot;2017-07-01\u0026quot; date_end = \u0026quot;2017-12-21\u0026quot; description = \u0026quot;\u0026quot;  Pages List your recently published pages such as blog posts, talks, and publications.\n List your recent pages.   There are three sections in the demo that use the Pages widget. These include home/posts.md, home/talks.md, and home/publications.md.\nEdit the front matter of a section to personalize the view and other options shown below:\nwidget = \u0026quot;pages\u0026quot; # Use the Pages widget headless = true # This file represents a page section. # ... Put Your Section Options Here (title etc.) ... [content] # Page type to display. E.g. post, talk, or publication. page_type = \u0026quot;post\u0026quot; # Choose how much pages you would like to display (0 = all pages) count = 5 # Choose how many pages you would like to offset by offset = 0 # Page order. Descending (desc) or ascending (asc) date. order = \u0026quot;desc\u0026quot; # Filter posts by a taxonomy term. [content.filters] tag = \u0026quot;\u0026quot; category = \u0026quot;\u0026quot; publication_type = \u0026quot;\u0026quot; exclude_featured = false exclude_past = false exclude_future = false [design] # Toggle between the various page layout types. # 1 = List # 2 = Compact # 3 = Card # 4 = Citation (publication only) view = 2  Featured Highlight featured blog posts (e.g. announcements), publications, and talks. Featured pages are also known as sticky pages.\nThe Featured widget is similar to the Pages widget, but with a focus on featured content rather than recent content.\n Highlight featured pages, such as blog posts or selected publications, with the Featured widget.   The featured.md section in the demo uses the Featured widget.\nEdit the front matter of a section to add the Featured widget and personalize its options such as the view:\nwidget = \u0026quot;featured\u0026quot; # Use the Featured widget headless = true # This file represents a page section. # ... Put Your Section Options Here (title etc.) ... [content] # Page type to display. E.g. post, talk, or publication. page_type = \u0026quot;publication\u0026quot; # Choose how much pages you would like to display (0 = all pages) count = 0 # Page order. Descending (desc) or ascending (asc) date. order = \u0026quot;desc\u0026quot; # Filter posts by a taxonomy term. [content.filters] tag = \u0026quot;\u0026quot; category = \u0026quot;\u0026quot; publication_type = \u0026quot;\u0026quot; [design] # Toggle between the various page layout types. # 1 = List # 2 = Compact # 3 = Card # 4 = Citation (publication only) view = 3  Contact Communication is the cornerstone of almost any website, especially business sites. With Academic, you can easily add communicate elements including a contact form, social messaging links, appointment booking, and a map to your website. A well designed contact section is essential to network with other people, spark new business, and increase conversions.\n With the Contact widget, you can add elements such as a contact form, social messaging links, appointment booking, and a map to your website.   The contact widget will automatically display the following information according to what you entered in config/_default/params.toml:\n contact form or an email link (see section below) contact links such as for Twitter, Skype, Weixin, Weibo, Discussion Forums, etc. phone number address office hours appointment booking link map  For example, the following options can be added to your section front matter in order to include the Contact widget:\nwidget = \u0026quot;contact\u0026quot; headless = true # This file represents a page section. # ... Put Your Section Options Here (title etc.) ... # Automatically link email and phone? autolink = true # Email form provider # 0: Disable email form # 1: Netlify (requires that the site is hosted by Netlify) # 2: formspree.io email_form = 2  Contact links Academic enables you to use a wide range of icons in your contact links. Learn more about icons.\nContact form You can choose whether to display simply an email address or a contact form. This can be chosen in content/home/contact.md by setting the email_form option. If set to 0, it will display your email address as a link, based on the value of email that you entered in config/_default/params.toml. If set to 1, it will use Netlify to add a contact form with a captcha test so that visitors can send you email and spam from bots is prevented.\n The Netlify option is only available if you are hosting your site with Netlify. In this case, user messages to you will be sent to your Netlify account admin panel. A webhook can be created in your Netlify account if you wish to forward messages to your email address. When using Netlify to provide the contact form, you do not need to provide a value for email in config/_default/params.toml since the messages will be delivered to your Netlify admin panel.   Otherwise, if set to 3, the widget will display a contact form using the email in config/_default/params.toml and will use the Formspree service for sending the email to you. For this method, simply send yourself a test message after you have configured the contact form. Formspree will then send you an email to verify your new account with them. Note that Formspree is usually blocked for Chinese visitors as it uses Google reCAPTCHA (unless you upgrade to Formspree\u0026rsquo;s paid plan in order to disable reCAPTCHA).\nPortfolio With the Portfolio widget you can showcase your work and optionally enable visitors to filter the items.\n Showcase your work or product features with the Portfolio widget.   Different views are available for the content. The default view is a masonry card view made famous by Pinterest.com. Other views include a large image showcase view, and a simple list view. For the showcase view, the flip_alt_rows option can be set to true to horizontally flip alternate rows - a style which is commonly seen on many popular sites and landing pages that showcase product features by placing large images and text side-by-side.\nThe widget is configurable in a one or two column structure by setting the columns option.\nAssociate your pages with tags by placing the tags option in the front matter of your pages (e.g. tags = [\u0026quot;A Tag\u0026quot;, \u0026quot;Another Tag\u0026quot;]). The Portfolio widget can then be configured to let visitors filter results by tags. To add a filter button, add or edit a [[content.filter_button]] option (see below), where name is the filter text and tag is the name of the tag to filter by (type * to show all items).\nThe projects.md section in the demo uses the Portfolio widget.\nTo show the widget in a section, reference it in your section\u0026rsquo;s front matter:\nwidget = \u0026quot;portfolio\u0026quot; # Use the Portfolio widget headless = true # This file represents a page section. # ... Put Your Section Options Here (title etc.) ... [content] # Page type to display. E.g. project. page_type = \u0026quot;project\u0026quot; # Filter toolbar (optional). # Add or remove as many filters (`[[content.filter_button]]` instances) as you like. # To show all items, set `tag` to \u0026quot;*\u0026quot;. # To filter by a specific tag, set `tag` to an existing tag name. # To remove toolbar, delete/comment all instances of `[[content.filter_button]]` below. # Default filter index (e.g. 0 corresponds to the first `[[filter_button]]` instance below). filter_default = 0 [[content.filter_button]] name = \u0026quot;All\u0026quot; tag = \u0026quot;*\u0026quot; [[content.filter_button]] name = \u0026quot;Deep Learning\u0026quot; tag = \u0026quot;Deep Learning\u0026quot; [[content.filter_button]] name = \u0026quot;Other\u0026quot; tag = \u0026quot;Demo\u0026quot; [design] # Choose how many columns the section has. Valid values: 1 or 2. columns = \u0026quot;2\u0026quot; # Toggle between the various page layout types. # 1 = List # 3 = Card # 5 = Showcase view = 3 # For Showcase view, flip alternate rows? flip_alt_rows = false  Tag Cloud Enable visitors to easily discover popular topics.\n Visitors can easily discover popular topics with the Tag Cloud widget.   Associate your pages with tags by placing the tags option in the front matter of your pages (e.g. tags = [\u0026quot;A Tag\u0026quot;, \u0026quot;Another Tag\u0026quot;]). The Tag Cloud widget will then display your tags. The more popular a tag is, the larger its font.\nThe tags.md section in the demo uses the Tag Cloud widget.\nTo show the widget in a section, reference it in your section\u0026rsquo;s front matter:\nwidget = \u0026quot;tag_cloud\u0026quot; # Use the Tag Cloud widget headless = true # This file represents a page section.  People Introduce your team members. The People widget displays photos of people within your team or organisation, and links to their user profile page. You can choose which users to display and in which order to display them by using user groups.\nFirst, create a user account for each user that your wish to display. (This can also be performed by duplicating the example content/authors/admin/ folder for each user and modifying its contents appropriately.)\nAdd each user to a user group using the user_groups option in the user account at content/authors/\u0026lt;USERNAME\u0026gt;/_index.md. For example setting user_groups = [\u0026quot;Researchers\u0026quot;, \u0026quot;Visitors\u0026quot;] in a user account will add that user to the Researcher and Visitors groups which we can display in the People widget.\nThe people.md section in the demo uses the People widget. Set active = true in its front matter to view the section.\nEdit the front matter of a section to add the People widget and personalize its options such as the user groups to display:\nwidget = \u0026quot;people\u0026quot; # Use the Featured widget headless = true # This file represents a page section. # ... Put Your Section Options Here (title etc.) ... # List user groups to display. # Edit each user's `user_groups` to add them to one or more of these groups. user_groups = [\u0026quot;Principal Investigators\u0026quot;, \u0026quot;Researchers\u0026quot;, \u0026quot;Grad Students\u0026quot;, \u0026quot;Administration\u0026quot;, \u0026quot;Visitors\u0026quot;, \u0026quot;Alumni\u0026quot;]  Slider Promote a lot of content in a small space with a slider (carousel). Users can click the left and right arrows to move between slides, or you can automate slide transitions with a timer.\n Promote a lot of content in a small space with the Slider (carousel) widget.   The slider.md section in the demo uses the Slider widget. Set active = true in its front matter to view the section.\nEach slide is defined as an [[item]] in the section front matter. A title and content can be set for each slide - Markdown formatting and emojis can be used. The content of each slide can be left, center, or right aligned.\nOptionally, a call-to-action (CTA) button can be added to a slide to encourage visitors to perform an action. The snippet below provides an example of using the cta_* options to add a CTA button to a slide.\nCustomize each slide with a background color (overlay_color) or image (overlay_img). The text color for slides is always white unless it is overrided using custom CSS styling.\nTo show the widget in a section, reference it in your section\u0026rsquo;s front matter:\nwidget = \u0026quot;slider\u0026quot; # Use the Slider widget headless = true # This file represents a page section. # ... Put Your Section Options Here (section position etc.) ... # Slide interval. # Use `false` to disable animation or enter a time in ms, e.g. `5000` (5s). interval = false # Minimum slide height. # Specify a height to ensure a consistent height for each slide. height = \u0026quot;300px\u0026quot; # Slides. # Duplicate an `[[item]]` block to add more slides. [[item]] title = \u0026quot;Hello\u0026quot; content = \u0026quot;I am center aligned 😄\u0026quot; align = \u0026quot;center\u0026quot; # Choose `center`, `left`, or `right`. # Overlay a color or image (optional). # Deactivate an option by commenting out the line, prefixing it with `#`. overlay_color = \u0026quot;#666\u0026quot; # An HTML color value. overlay_img = \u0026quot;headers/bubbles-wide.jpg\u0026quot; # Image path relative to your `static/img/` folder. overlay_filter = 0.5 # Darken the image. Value in range 0-1. # Call to action button (optional). # Activate the button by specifying a URL and button label below. # Deactivate by commenting out parameters, prefixing lines with `#`. cta_label = \u0026quot;Get Academic\u0026quot; cta_url = \u0026quot;https://sourcethemes.com/academic/\u0026quot; cta_icon_pack = \u0026quot;fas\u0026quot; cta_icon = \u0026quot;graduation-cap\u0026quot; [[item]] title = \u0026quot;Left\u0026quot; content = \u0026quot;I am left aligned 😄\u0026quot; align = \u0026quot;left\u0026quot; overlay_color = \u0026quot;#555\u0026quot; # An HTML color value. overlay_img = \u0026quot;\u0026quot; # Image path relative to your `static/img/` folder. overlay_filter = 0.5 # Darken the image. Value in range 0-1. [[item]] title = \u0026quot;Right\u0026quot; content = \u0026quot;I am right aligned 😄\u0026quot; align = \u0026quot;right\u0026quot; overlay_color = \u0026quot;#333\u0026quot; # An HTML color value. overlay_img = \u0026quot;\u0026quot; # Image path relative to your `static/img/` folder. overlay_filter = 0.5 # Darken the image. Value in range 0-1.  You may also be interested in the Hero widget.\n","date":1460995200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1460995200,"objectID":"f227333658eed424dc2527d4345a268f","permalink":"https://blog.codist.me/en/docs/page-builder/","publishdate":"2016-04-19T00:00:00+08:00","relpermalink":"/en/docs/page-builder/","section":"docs","summary":"Building beautiful pages is easy with Academic\u0026rsquo;s widget system. No programming is required!\nLoading pre-made layouts is a great way to kickstart your new homepage. Academic Kickstart comes with some popular Sections preconfigured for this purpose. A Widget can be added inside each Section. Hence, you can have multiple instances of widgets, such as listing recent pages of different content types or categories.\nWidgets empower you to fully customize your site.","tags":null,"title":"Getting Started With the Page Builder","type":"docs"},{"authors":null,"categories":null,"content":" The update process consists of:\n Preparation Updating Academic Migrating your content front matter and configuration by applying any relevant breaking changes  Feel free to star Academic on Github to help keep track of updates and check out the release notes to learn what\u0026rsquo;s new.\nPreparation Before updating Academic, it is strongly recommended to make a full backup of your website folder (including themes/academic/).\nThen, record your current version, so that after you update Academic, you can apply any relevant breaking changes to the TOML/YAML site configuration and front matter in your content/ folder. To find your current version, look in themes/academic/data/academic.toml. Note that if you installed the master version rather than a specific release, then extra care should be taken (such as by checking the git log if you installed with git) as you may be in-between versions.\n Academic Kickstart comes with an update script to check for available updates.   Update Academic Please follow the method below which corresponds to how you originally installed Academic:\nIf you installed academic-kickstart By default, Academic is installed as a Git sub-module which can be updated by running the following command:\ngit submodule update --remote --merge  If you installed by Git cloning hugo-academic Before updating for the first time, the remote origin repository should be renamed to upstream:\n$ cd themes/academic $ git remote rename origin upstream  To list available updates:\n$ cd themes/academic $ git fetch upstream $ git log --pretty=oneline --abbrev-commit --decorate HEAD..upstream/master  Then, update by running:\n$ git pull upstream  If you installed from a ZIP Uninstall your current version of Academic by deleting the contents of themes/academic/. Download and extract the latest version of Academic to your themes/academic/ folder.\nMigrate Content When you update Academic itself, you can jump straight to the latest and greatest version. However, content migration requires consecutively applying any relevant steps from each release.\nTo migrate your TOML/YAML front matter and configuration, apply any relevant steps from the Breaking Changes section of each consecutive release note since the version you were originally on. If a release has no Breaking Changes section, then no changes are required.\nFor example, if you are updating from v2.4.0 to v3.1.0, then apply the breaking changes for the relevant consecutive releases. In this case, that would require first applying the breaking changes from v3.0.0 and then applying the breaking changes from v3.1.0.\nTo help migrate content to be compatible with new versions of Academic, there are some tools available in the Academic Scripts repository.\nTroubleshooting Check out the release notes for the consecutive version that you are updating to, paying attention to the breaking changes. You can check which version you currently have, refer to the Preparation section above.\nIf there are any issues after updating, you may wish to compare your site with the latest example site to check if any TOML/YAML settings changed in the configuration files (i.e. all files in the config/_default/ folder) or in the front matter of content files (i.e. files in the content/ folder).\nIf you have modified files in themes/academic, git will attempt to auto-merge changes. If conflicts are reported, you will need to manually edit the files with conflicts and add them back (git add \u0026lt;filename\u0026gt;).\nAlso, if you overrided any Academic files (by using Hugo\u0026rsquo;s inheritance principle), then these may cause conflicts after updating. Consider removing them or checking if the original file(s) that you are overriding have changed in any way and require syncing with your custom version of the file(s).\n","date":1461081600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461081600,"objectID":"9a14cce9dc0c03ad72e7a707bb406d73","permalink":"https://blog.codist.me/en/docs/update/","publishdate":"2016-04-20T00:00:00+08:00","relpermalink":"/en/docs/update/","section":"docs","summary":"The update process consists of:\n Preparation Updating Academic Migrating your content front matter and configuration by applying any relevant breaking changes  Feel free to star Academic on Github to help keep track of updates and check out the release notes to learn what\u0026rsquo;s new.\nPreparation Before updating Academic, it is strongly recommended to make a full backup of your website folder (including themes/academic/).\nThen, record your current version, so that after you update Academic, you can apply any relevant breaking changes to the TOML/YAML site configuration and front matter in your content/ folder.","tags":null,"title":"Update","type":"docs"},{"authors":null,"categories":null,"content":" Front matter allows page-specific metadata and functionality to be included at the top of a Markdown file.\nIn the documentation and the example site, we will predominantly use YAML to format the front matter of content files and TOML to format the configuration files and widget files. This is because TOML is more human-friendly but popular Markdown editors primarily support YAML front matter in content files.\nFor editing your content locally on your computer, we recommend Typora or Visual Studio Code.\nIf a content file has front matter variables set between triple-minus --- lines, then it is YAML formatted. Otherwise, a content file will have front matter variables set between triple-plus +++ lines, indicating that it is TOML formatted. The front matter may include metadata such as page title, date published, author, categories, tags, and so on. Here is a simple example:\n--- date: 2017-12-01 title: My first blog post ---  TOML The example configuration and publication files are formatted in TOML.\nset between triple-plus +++ lines. The variables may include metadata such as page title, date published, author, categories, tags, and so on. Here is a simple example:\n+++ date = 2017-12-01 title = \u0026quot;My first blog post\u0026quot; +++  Each configuration section (referred to as a table in TOML) is defined by a name in square brackets (e.g. [image]). If you are adding new parameters to a file, consider which configuration section they should belong to. Often the first configuration section in front matter will not be explicitly defined, but can be thought of as the root or main section. If you are adding parameters to a file, they should always be added to the root section at the top of the file unless they define their own configuration section, in which case they can be placed at the end of the front matter. Otherwise, you may see strange behavior such as your new parameters having no effect.\nTOML aims to be simpler and more human friendly than other popular configuration formats that are designed more for machines, such as YAML. Thus, managing your site configuration is designed to be as easy as possible.\nRStudio If you are using RStudio to edit your site and wish to include an RMarkdown file, you\u0026rsquo;ll need to utilise YAML in your RMarkdown file as RMarkdown does not yet support the TOML format.\n RMarkdown should be saved with the .Rmarkdown file extension rather than the .Rmd extension.   ","date":1512230400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1512230400,"objectID":"74ff19651fd18a951f8e0ea3a2810d5d","permalink":"https://blog.codist.me/en/docs/front-matter/","publishdate":"2017-12-03T00:00:00+08:00","relpermalink":"/en/docs/front-matter/","section":"docs","summary":"Front matter allows page-specific metadata and functionality to be included at the top of a Markdown file.\nIn the documentation and the example site, we will predominantly use YAML to format the front matter of content files and TOML to format the configuration files and widget files. This is because TOML is more human-friendly but popular Markdown editors primarily support YAML front matter in content files.\nFor editing your content locally on your computer, we recommend Typora or Visual Studio Code.","tags":null,"title":"Front Matter","type":"docs"},{"authors":null,"categories":null,"content":"This is a brief guide to managing content with the Academic framework. Content can include news/blog posts, publications, projects, talks, widget pages, and much more. After you have read this guide about creating and managing content, you may also be interested to learn about writing content with Markdown, LaTeX, and Shortcodes.\n Most front matter snippets in the documentation have recently been converted from TOML to YAML. The example publications, widgets, and configuration files remain in TOML format. Academic and Hugo continue to support both formats. An online YAML\u0026lt;\u0026ndash;\u0026gt;TOML converter is available should you need it. This change is to make it easier to edit content in popular Markdown editors like Typora and Visual Studio Code.   Introduction The following common metadata can be added to the front matter of most types of page in Academic.\nCore metadata:\n title: the title of your page summary: a one-sentence summary of the content on your page. The summary can be shown on the homepage and can also benefit your search engine ranking. date: the RFC 3339 date that the page was published. A future date will schedule the page to be published in the future. If you use the hugo new ... commands described on this page, the date will be filled automatically when you create a page. Also see lastmod and publishDate. authors: display the authors of the page and link to their user profiles if they exist. To link to a user profile, create a user based on the admin template and reference their username (the name of a user in your authors folder) in the authors field, e.g. authors: [\u0026quot;admin\u0026quot;]. tags: tagging your content helps users to discover similar content on your site. Tags can improve search relevancy and are displayed after the page content and also in the Tag Cloud widget. E.g. tags: [\u0026quot;Electronics\u0026quot;, \u0026quot;Diodes\u0026quot;].  Popular metadata:\n subtitle: an optional subtitle that will be displayed under the title featured: by setting featured: true, a page can be displayed in the Featured widget. This is useful for sticky, announcement blog posts or selected publications etc. categories: categorizing your content helps users to discover similar content on your site. Categories can improve search relevancy and display at the top of a page alongside a page\u0026rsquo;s metadata. E.g. categories: [\u0026quot;Art\u0026quot;]. lastmod: the RFC 3339 date that the page was last modified. If using Git, enable enableGitInfo in config.toml to have the page modification date automatically updated, rather than manually specifying lastmod. publishDate: the RFC 3339 date that the page was published. You only need to specify this option if you wish to set date in the future but publish the page now, as is the case for publishing a journal article that is to appear in a journal etc. draft: by setting draft: true, only you will see your page when you preview your site locally on your computer  A complete list of standard options can be found on the corresponding Hugo docs page.\nFeatured image To display a featured image in content pages, simply drag an image named featured.* (e.g. featured.jpg) into your page\u0026rsquo;s folder.\n If your page does not have its own folder (page bundle) within its section folder, you can refactor a page named NAME.md to NAME/index.md, creating the folder NAME. There is a tool to help automate this process. Page bundles require Academic v3+ and Hugo v0.50+.   Want to caption the image or set a focal point to influence how the image is cropped? The parameters below can be added to the bottom of your page front matter to customize the appearance of the image. The caption supports Markdown and can be used to write an image caption or credit. The focal point ensures that automatic resizes of the image keep the subject in view.\n# Featured image # To use, add an image named `featured.jpg/png` to your page's folder. image: # Caption (optional) caption: \u0026quot;Photo by [Academic](https://sourcethemes.com/academic/)\u0026quot; # Focal point (optional) # Options: Smart, Center, TopLeft, Top, TopRight, Left, Right, BottomLeft, Bottom, BottomRight focal_point: \u0026quot;Center\u0026quot; # Show image only in page previews? preview_only: false  Page resources Buttons can be generated in the page header to link to associated resources.\nThe example below shows how to create a Twitter link for a project and how to create a link to a post that was originally published on Medium:\nlinks: - icon_pack: fab icon: twitter name: Follow url: 'https://twitter.com/Twitter' - icon_pack: fab icon: medium name: Originally published on Medium url: 'https://medium.com'  The only required option is url, giving you the option to show a text button, an icon button, or a combination of both. Learn more about icons.\n Prior to 13th February 2019, links was known as url_custom.   To generate a PDF button, add a PDF file with the same name as your page\u0026rsquo;s own folder to your page\u0026rsquo;s folder and a PDF link will be automatically generated. For example, if your page is located at publication/photons/index.md, place a PDF at publication/photons/photons.pdf. This can be useful for talks and publications.\nThere are also several special built-in buttons that can be setup using url_... options in the front matter of some content types.\nPage features The following parameters can be added to the front matter of a page (such as a blog post) to control its features:\nreading_time: false # Show estimated reading time? share: false # Show social sharing links? profile: false # Show author profile? comments: false # Show comments?  Math and Code To enable LaTeX math rendering for a page, you should include math: true in the page\u0026rsquo;s front matter, as demonstrated in the included example site. Otherwise, to enable math on the homepage or for all pages, you must globally set math = true in params.toml.\nTo disable source code highlighting for all pages, set highlight = false in params.toml. You can then enable source code highlighting only on pages that need it by setting highlight: true in that page\u0026rsquo;s front matter. See the code highlighting guide for further details.\nHeader image To display a full width header image, the header parameters below can be inserted towards the end of a page\u0026rsquo;s front matter. It is assumed that the image is located in your static/img/ media library, so the full path in the example below will be static/img/header.png. The caption parameter supports Markdown and can be used to write an image caption or credit. This option can be particularly useful for adding to an archive page\u0026rsquo;s _index.md (e.g. to display at YOUR_URL/post/ for the blog post archive).\nheader: image: \u0026quot;header.png\u0026quot; caption: \u0026quot;Image credit: [**Academic**](https://github.com/gcushen/hugo-academic/)\u0026quot;  Create a publication Automatically The leading reference management tools enable you to export your publications to the open BibTeX format. If you are new to research we recommend managing references with Zotero, a popular open source tool.\nIn your reference management tool, create a list of your own publications and export it as a *.bib BibTeX file.\nPython 3 is a prerequisite, so please install Python 3 if it\u0026rsquo;s not already installed. Also, you should backup your website before continuing, or ensure that it is checked into Git so that you can review the changes that will be proposed by Academic\u0026rsquo;s admin tool later on.\nOpen your Terminal or Command Prompt app and install Academic\u0026rsquo;s admin tool:\npip3 install -U academic  Use the cd command to navigate to your website folder in the terminal.\nThen import your publications with:\nacademic import --bibtex \u0026lt;path_to_your/publications.bib\u0026gt;  The tool is in beta status and intended purely to help assist you, so the generated output in the publication folder should be reviewed prior to publishing your site. You can also consider enhancing the output by taking a look at the front matter parameters in the files alongside the details in the Manually section below.\nTo contribute to the tool or submit feature requests and bug report, please check out the Academic admin tool on GitHub.\nManually Alternatively, publications can be manually created using the command:\nhugo new --kind publication publication/\u0026lt;my-publication\u0026gt;  where \u0026lt;my-publication\u0026gt; is the name of your publication, using hyphens (-) instead of spaces.\nThen edit the parameters in content/publication/\u0026lt;my-publication\u0026gt;/index.md to include the details of your publication. The main parameters include:\n title: the title of your publication date: the date that your publication was first published (must be in a valid TOML date format) publication_types: use the following legend to specify the type of your publication, e.g. \u0026quot;1\u0026quot; for conference proceedings:  0 = Uncategorized 1 = Conference paper 2 = Journal article 3 = Preprint / Working Paper 4 = Report 5 = Book 6 = Book section 7 = Thesis (v4.2+ required) 8 = Patent (v4.2+ required)  publication: where your title was published - Markdown formatting is enabled here for italic etc. abstract: the summary of your publication  Further details on your publication can be written in the body of the document (after the YAML/TOML front matter) using Markdown for formatting. This text will be displayed on the publication\u0026rsquo;s page.\nTo enable visitors to read your work, either paste a link to your PDF in url_pdf or add a PDF file with the same name as your publication\u0026rsquo;s own folder to your publication\u0026rsquo;s folder and a PDF link will be automatically generated. For example, if your publication is located at publication/photons/index.md, place a PDF at publication/photons/photons.pdf.\nTo enable visitors to easily cite your work, export a BibTeX citation file named cite.bib from your reference management tool to your publication\u0026rsquo;s own folder and a citation link will be automatically generated.\nLinking other resources\nThe url_ links can either point to local or web content. Associated local publication content, may be copied to the publication\u0026rsquo;s folder and referenced like url_code = \u0026quot;code.zip\u0026quot;.\nYou can also associate custom link buttons with the publication.\n Any double quotes (\u0026quot;) or backslashes (e.g. LaTeX \\times) occurring within the value of any frontmatter parameter (such as the abstract) should be escaped with a backslash (\\). For example, the symbol \u0026quot; and LaTeX text \\times become \\\u0026quot; and \\\\times, respectively. Refer to the TOML documentation for more info.   Modifying Publication Types\nTo rename publication types in v4+, edit the associated pub_* values in your language pack. These values can be found in the default English language pack but may not have been translated to all of the other languages packs yet.\nTo add or remove publication types in v4+, override the layouts/partials/pub_types.html file with your own array using the Go templating language.\nCreate a blog post To create a blog/news article:\nhugo new --kind post post/my-article-name  Then edit the newly created file content/post/my-article-name.md with your full title and content.\nHugo will automatically generate summaries of posts that appear on the homepage. If you are dissatisfied with an automated summary, you can either limit the summary length by appropriately placing \u0026#60;\u0026#33;\u0026#45;\u0026#45;more\u0026#45;\u0026#45;\u0026#62; in the article body, or completely override the automated summary by adding a summary parameter to the +++ preamble such that:\nsummary: \u0026quot;Summary of my post.\u0026quot;  To disable commenting for a specific post, you can add disable_comments: true to the post +++ preamble. Or to disable commenting for all posts, you can either set disqusShortname = \u0026quot;\u0026quot; in config.toml or disable_comments = true in params.toml.\nCreate a project To create a project:\nhugo new --kind project project/my-project-name  Then edit the newly created file content/project/my-project-name.md. Either you can link the project to an external project website by setting the external_link: \u0026quot;http://external-project.com\u0026quot; variable at the top of the file, or you can add content (below the final ---) in order to render a project page on your website.\nCreate a talk To create a talk:\nhugo new --kind talk talk/my-talk-name  Then edit the newly created file content/talk/my-talk-name.md with your full talk title and details. Note that many of the talk parameters are similar to the publication parameters.\nCreate slides Slides can be created very efficiently using Markdown, presented to your audience, and shared on your site. Speaker notes included!\nSee the slides demo - although note that this demo is hosted by Hugo team and they have modified their demo to reduce functionality. Build the example site (themes/academic/exampleSite/) locally to see the full demo including speaker notes.\nRefer to the example slide deck at themes/academic/exampleSite/content/slides/example/index.md to learn how to get started.\nLink slides with a talk or publication by editing the external url_slides option or internal slides option in the talk/publication page to point to your slides. For example, slides: \u0026quot;example\u0026quot; points to the Markdown formatted slide deck in the example site at slides/example/index.md. See the full example front matter which includes url_slides and slides here.\nTheming a slide deck Slide decks use their own theming system rather than the one configured in your site\u0026rsquo;s params.toml. This enables the theme of each slide deck to be customized in its front matter.\nFor a light themed slide deck, consider setting the following slides options in your slide deck\u0026rsquo;s front matter:\nslides: theme: \u0026quot;white\u0026quot; # Reveal JS theme name highlight_style: \u0026quot;github\u0026quot; # Highlight JS theme name  For a dark themed slide deck, consider setting the following slides options in your slide deck\u0026rsquo;s front matter:\nslides: theme: \u0026quot;black\u0026quot; # Reveal JS theme name highlight_style: \u0026quot;dracula\u0026quot; # Highlight JS theme name  Note that the highlight_style option is only available for slides made with Academic v4.3.0+.\nCreate a course or documentation The docs feature is designed for knowledge sharing. Use cases include online courses, tutorials, software documentation, and knowledge bases.\nThis website is using the docs feature for the purpose of documenting Academic. Also, there is a online course demo.\nRefer to the example course at themes/academic/exampleSite/content/courses/ to learn how to get started.\nContinue reading below to learn more about creating courses, tutorials, and documentation using the docs feature.\nOrganization The docs feature can be used to create courses, tutorials, and documentation in the following file structure:\ncontent/courses ├── _index.md # Lists your courses, tutorials, or documentation └── example # Folder for your course/tutorial/documentation ├── _index.md # Overview of this course/tutorial/documentation ├── example1.md # A page └── example2.md # Another page └── course2 # Folder for another course/tutorial/documentation ├── _index.md ├── intro.md └── ...  File and folder names should not contain spaces (use hyphens instead).\nRenaming The courses folder may be renamed. For example, we can rename it to docs for software/project documentation, or tutorials for creating an online course.\nAfter renaming or deleting the courses folder, you may wish to update any [[main]] menu links to it by editing your menu configuration at config/_default/menus.toml.\nFor example, if you delete this folder, you can remove the following from your menu configuration:\n[[main]] name = \u0026quot;Courses\u0026quot; url = \u0026quot;courses/\u0026quot; weight = 50  Or, if you are creating a software documentation site, you can rename the courses folder to docs and update the associated Courses menu configuration to:\n[[main]] name = \u0026quot;Docs\u0026quot; url = \u0026quot;docs/\u0026quot; weight = 50  Listing courses and documentation The content/courses/_index.md file automatically lists any course, tutorial, or documentation folders within the content/courses/ folder. Open the file to edit the page title.\ntitle: Courses layout: docs # Do not modify. # Optional header image (relative to `static/img/` folder). header: caption: \u0026quot;\u0026quot; image: \u0026quot;\u0026quot;  Course and documentation metadata Edit the _index.md within your course/documentation folder (e.g. content/courses/example/_index.md) in order to specify a name and summary for your course/documentation.\n# Course title, summary, and position in the list. linktitle: An Example Course summary: Learn how to use Academic's docs layout for publishing online courses, software documentation, and tutorials. weight: 1 # Page metadata. title: Overview date: \u0026quot;2018-09-09T00:00:00Z\u0026quot; lastmod: \u0026quot;2018-09-09T00:00:00Z\u0026quot; draft: false # Is this a draft? true/false toc: true # Show table of contents? true/false type: docs # Do not modify. # Add menu entry to sidebar. # - name: Declare this menu item as a parent with ID `name`. # - weight: Position of link in menu. menu: example: name: Overview weight: 1  Menus If you use the docs layout, note that the name of the menu in the front matter should be in the form menu: X: where X is the folder name. Hence, if you rename the courses/example/ folder, you should also rename the menu definitions in the front matter of files within courses/example/ from menu: example: to menu: \u0026lt;NewFolderName\u0026gt;:.\nHugo also offers an alternative approach of storing the menu for each course/documentation centrally in config/_default/menus.toml rather than in the front matter of each course/documentation page.\nRead more about Hugo\u0026rsquo;s menu system here.\nPages You can create as many pages as your need. Each page should have a title, menu link (menu) to it, and a page type of docs.\ntitle is the page title which appears in page header, whereas linktitle is the label for link to this page. If you remove linktitle, the menu link will display the page title.\nTo show a table of contents generated from the headings on your page, set toc to true.\nTo show a prev/next pager at the bottom of each docs section page, enable docs_section_pager in params.toml and then set the order of the pager by defining a weight for each page.\nAn example course/documentation page is as follows:\n--- title: Example Page 1 linktitle: Tips 1-2 toc: true type: docs date: \u0026quot;2019-05-05T00:00:00Z\u0026quot; draft: false menu: example: parent: Example Topic weight: 1 # Prev/next pager order (if `docs_section_pager` enabled in `params.toml`) weight: 1 --- Content...  Create a widget page So you would like to create a page which utilizes Academic\u0026rsquo;s widget system, similar to the homepage?\nCreate a new folder in your content folder, naming it with your new page name. In this example, we will create a landing page by creating a content/landing/ folder to contain our new sections (widget instances).\nWithin your new content/landing/ folder, create a file named index.md containing the following YAML parameters:\n--- title: \u0026quot;Landing Page\u0026quot; # Add a page title. summary: \u0026quot;Hello!\u0026quot; # Add a page description. date: \u0026quot;2019-01-01T00:00:00Z\u0026quot; # Add today's date. type: \u0026quot;widget_page\u0026quot; # Page type is a Widget Page ---  Now, we can use the page builder to add sections into your content/landing/ folder. Widgets can also be copied from your content/home/ folder or the themes/academic/exampleSite/content/home/ demo site folder.\nWe can also create a menu link to our new Widget Page. Given a Widget Page folder named landing, open config/_default/menu.toml in your editor and add:\n[[main]] name = \u0026quot;My Widget Page\u0026quot; # Title of the link. url = \u0026quot;landing/\u0026quot; # Widget Page folder name. weight = 2 # Position of the link in the navigation bar.   To create the new widget pages, an Academic version from 18 March 2019 onwards is required (corresponding to v4.2 dev or greater).   Create other pages (e.g. CV) For other types of content, it is possible to create your own custom pages. For example, let\u0026rsquo;s create a cv.md page for your Curriculum Vitae in your content folder. Copy across the frontmatter from the top of one of your post files, adapting it as necessary, and editing your Markdown content below. You can then link to your new page by adding the code [My CV]{{\u0026lt; ref \u0026quot;cv.md\u0026quot; \u0026gt;}} to any of your existing content.\nAlternatively, for the above example, we could use a PDF of your Curriculum Vitae. For this purpose, create a folder called files within your static folder and move a PDF file named cv.pdf to that location, so we have a static/files/cv.pdf file path. The PDF can then be linked to from any content by using the code: {{% staticref \u0026quot;files/cv.pdf\u0026quot; %}}Download my CV{{% /staticref %}}.\nManage archive pages The archive (or node index) pages (e.g. /post/) are the special pages which list all of your content. They can exist for blog posts, publications, and talks. The homepage widgets will automatically link to the archive pages when you have more items of content than can be displayed in the widget. Therefore, if you don\u0026rsquo;t have much content, you may not see the automatic links yet - but you can also manually link to them using a normal Markdown formatted link in your content.\nYou can edit the title and add your own content, such as an introduction, by copying the following content _index.md files from the example site to the same structure within your content/ folder:\n/themes/academic/exampleSite/content/post/_index.md /themes/academic/exampleSite/content/publication/_index.md /themes/academic/exampleSite/content/talk/_index.md  Then edit the title parameter in each _index.md as desired and add any content after the front matter. You will notice that the _index.md files differ slightly, with some having special options available for the associated content type. For example, publication/_index.md contains an option for setting the citation style of the listings which appear on the publication archive page.\nRemoving content To remove content permanently, simply delete the relevant page file/folder within your content/ folder.\nTo temporarily unpublish content, set draft: true at the top of a page\u0026rsquo;s front matter.\nView your updated site After you have made changes to your site, you can view it by running the hugo server command and then opening localhost:1313 in your web browser.\nDeploy your site Finally, you can deploy your site.\n","date":1460908800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1460908800,"objectID":"fa822beb1fcbbceaa3d8a709edf9beae","permalink":"https://blog.codist.me/en/docs/managing-content/","publishdate":"2016-04-18T00:00:00+08:00","relpermalink":"/en/docs/managing-content/","section":"docs","summary":"This is a brief guide to managing content with the Academic framework. Content can include news/blog posts, publications, projects, talks, widget pages, and much more. After you have read this guide about creating and managing content, you may also be interested to learn about writing content with Markdown, LaTeX, and Shortcodes.\n","tags":null,"title":"Managing content","type":"docs"},{"authors":null,"categories":null,"content":"Content can be written using Markdown, LaTeX math, and Hugo Shortcodes. Additionally, HTML may be used for advanced formatting.\nThis article gives an overview of the most common formatting options.\nSub-headings ## Heading 2 ### Heading 3 #### Heading 4 ##### Heading 5 ###### Heading 6  Emphasis Italics with _underscores_. Bold with **asterisks**. Combined emphasis with **asterisks and _underscores_**. Strikethrough with ~~two tildes~~.  Ordered lists 1. First item 2. Another item  Unordered lists * First item * Another item  Images Images may be added to a page by either placing them in your static/img/ media library or in your page\u0026rsquo;s folder, and then referencing them using one of the following notations:\nA figure from your static/img/ media library:\n{{\u0026lt; figure library=\u0026quot;1\u0026quot; src=\u0026quot;image.jpg\u0026quot; title=\u0026quot;A caption\u0026quot; \u0026gt;}}  A figure within a page\u0026rsquo;s folder (e.g. content/post/hello/) :\n{{\u0026lt; figure src=\u0026quot;image.jpg\u0026quot; title=\u0026quot;A caption\u0026quot; \u0026gt;}}  A numbered figure with caption:\n{{\u0026lt; figure src=\u0026quot;image.jpg\u0026quot; title=\u0026quot;A caption\u0026quot; numbered=\u0026quot;true\u0026quot; \u0026gt;}}  A general image:\n![alternative text for search engines](/img/image.jpg)  Image gallery To add an image gallery to a page bundle:\n Create a gallery album folder within your page bundle (i.e. within your page\u0026rsquo;s own folder) Add images to your new album folder Paste {{\u0026lt; gallery album=\u0026quot;\u0026lt;ALBUM FOLDER\u0026gt;\u0026quot; \u0026gt;}} where you would like the gallery to appear in the page content, changing the album parameter to match the name of your album folder  Optionally, to add captions for your images, add the following instances to the end of your page\u0026rsquo;s front matter:\ngallery_item: - album: \u0026lt;ALBUM FOLDER\u0026gt; image: \u0026lt;IMAGE NAME\u0026gt;.jpg caption: Write your image caption here  Alternatively, create an image gallery with images from the internet or your static/img/ media library:\n Add gallery images to within your static/img/ media library folder Reference your images at the end of the front matter of a content file in the form:\ngallery_item: - album: gallery image: boards.jpg caption: A caption - album: gallery image: https://raw.githubusercontent.com/gcushen/hugo-academic/master/images/theme-dark.png caption: Another caption  Display the gallery somewhere within your page content by using {{\u0026lt; gallery \u0026gt;}}\n   For docs pages (i.e. pages using the courses and documentation layout), gallery images must be placed in the static/ media library using the second approach (due to limitations of Hugo).   Videos The following kinds of video may be added to a page.\nLocal video file\nVideos may be added to a page by either placing them in your static/img/ media library or in your page\u0026rsquo;s folder, and then referencing them using one of the following notations.\nA video from your static/img/ media library:\n{{\u0026lt; video library=\u0026quot;1\u0026quot; src=\u0026quot;my_video.mp4\u0026quot; controls=\u0026quot;yes\u0026quot; \u0026gt;}}  A video within a page\u0026rsquo;s folder (e.g. content/post/hello/):\n{{\u0026lt; video src=\u0026quot;my_video.mp4\u0026quot; controls=\u0026quot;yes\u0026quot; \u0026gt;}}  Youtube:\n{{\u0026lt; youtube w7Ft2ymGmfc \u0026gt;}}  Vimeo:\n{{\u0026lt; vimeo 146022717 \u0026gt;}}  Links [I'm a link](https://www.google.com) [A post]({{\u0026lt; ref \u0026quot;/post/my-page-name/index.md\u0026quot; \u0026gt;}}) [A publication]({{\u0026lt; ref \u0026quot;/publication/my-page-name/index.md\u0026quot; \u0026gt;}}) [A project]({{\u0026lt; ref \u0026quot;/project/my-page-name/index.md\u0026quot; \u0026gt;}}) [A relative link from one post to another post]({{\u0026lt; relref \u0026quot;../my-page-name/index.md\u0026quot; \u0026gt;}}) [Scroll down to a page section with heading *Hi*](#hi)  To enable linking to a file, such as a PDF, first place the file in your static/files/ folder and then link to it using the following form:\n{{% staticref \u0026quot;files/cv.pdf\u0026quot; \u0026quot;newtab\u0026quot; %}}Download my CV{{% /staticref %}}  The optional \u0026quot;newtab\u0026quot; argument for staticref will cause the link to be opened in a new tab.\nTags and Categories Use {{\u0026lt; list_tags \u0026gt;}} to provide a list of linked tags or {{\u0026lt; list_categories \u0026gt;}} to provide a list of linked categories.\nEmojis See the Emoji cheat sheet for available emoticons. The following serves as an example, but you should remove the spaces between each emoji name and pair of semicolons:\nI : heart : Academic : smile :  I ❤️ Academic 😄\nBlockquote \u0026gt; This is a blockquote.   This is a blockquote.\n Highlight quote This is a {{\u0026lt; hl \u0026gt;}}highlighted quote{{\u0026lt; /hl \u0026gt;}}.  This is a highlighted quote.\nFootnotes I have more [^1] to say. [^1]: Footnote example.  I have more 1 to say.\nEmbed Documents The following kinds of document may be embedded into a page.\nTo embed Google Documents (e.g. slide deck), click File \u0026gt; Publish to web \u0026gt; Embed in Google Docs and copy the URL within the displayed src=\u0026quot;...\u0026quot; attribute. Then paste the URL in the form:\n{{\u0026lt; gdocs src=\u0026quot;https://docs.google.com/...\u0026quot; \u0026gt;}}  Diagrams Diagrams can be created in the open source draw.io editor. The editor has support for almost any type of diagram, from simple to complex. A diagram can be easily embedded in Academic by choosing File \u0026gt; Embed \u0026gt; SVG in the draw.io editor and pasting the generated code into your page.\nAlternatively, a diagram can be exported as an image from any drawing software, or a document/slide containing a diagram can be embedded.\nCode highlighting Pass the language of the code, such as python, as a parameter after three backticks:\n```python # Example of code highlighting input_string_var = input(\u0026quot;Enter some data: \u0026quot;) print(\u0026quot;You entered: {}\u0026quot;.format(input_string_var)) ```  Result:\n# Example of code highlighting input_string_var = input(\u0026quot;Enter some data: \u0026quot;) print(\u0026quot;You entered: {}\u0026quot;.format(input_string_var))  Highlighting options The Academic theme uses highlight.js for source code highlighting, and highlighting is enabled by default for all pages. However, several configuration options are supported that allow finer-grained control over highlight.js.\nThe following table lists the supported options for configuring highlight.js, along with their expected type and a short description. A \u0026ldquo;yes\u0026rdquo; in the config.toml column means the value can be set globally in config.toml, and a \u0026ldquo;yes\u0026rdquo; in the preamble column means that the value can be set locally in a particular page\u0026rsquo;s preamble.\n   option type description config.toml preamble     highlight boolean enable/disable highlighting yes yes   highlight_languages slice choose additional languages yes yes   highlight_style string choose a highlighting style yes no    Option highlight The highlight option allows enabling or disabling the inclusion of highlight.js, either globally or for a particular page. If the option is unset, it has the same effect as if you had specified highlight = true. That is, the highlight.js javascript and css files will be included in every page. If you\u0026rsquo;d like to only include highlight.js files on pages that actually require source code highlighting, you can set highlight = false in params.toml, and then override it by setting highlight: true in the preamble of any pages that require source code highlighting. Conversely, you could enable highlighting globally, and disable it locally for pages that do not require it. Here is a table that shows whether highlighting will be enabled for a page, based on the values of highlight set in params.toml and/or the page\u0026rsquo;s preamble.\n   config.toml page front matter highlighting enabled for page?     unset or true unset or true yes   unset or true false no   false unset or false no   false true yes    Option highlight_languages The highlight_languages option allows you to specify additional languages that are supported by highlight.js, but are not considered \u0026ldquo;common\u0026rdquo; and therefore are not supported by default. For example, if you want source code highlighting for Go and clojure in all pages, set highlight_languages = [\u0026quot;go\u0026quot;, \u0026quot;clojure\u0026quot;] in params.toml. If, on the other hand, you want to enable a language only for a specific page, you can set highlight_languages in that page\u0026rsquo;s preamble.\nThe highlight_languages options specified in config.toml and in a page\u0026rsquo;s preamble are additive. That is, if params.toml contains, highlight_languages = [\u0026quot;go\u0026quot;] and the page\u0026rsquo;s preamble contains highlight_languages: [\u0026quot;ocaml\u0026quot;], then javascript files for both go and ocaml will be included for that page.\nIf the highlight_languages option is set, then the corresponding javascript files will be served from the cdnjs server. To see a list of available languages, visit the cdnjs page and search for links with the word \u0026ldquo;languages\u0026rdquo;.\nThe highlight_languages option provides an easy and convenient way to include support for additional languages to be severed from a CDN. If serving unmodified files from cdnjs doesn\u0026rsquo;t meet your needs, you can include javascript files for additional language support via one of the methods described in the customization guide.\nOption highlight_style The highlight_style option allows you to select an alternate css style for highlighted code. For example, if you wanted to use the solarized-dark style, you could set highlight_style = \u0026quot;solarized-dark\u0026quot; in params.toml.\nIf the highlight_style option is unset, the default is to use the file /css/highlight.min.css, either the one provided by the Academic theme, or else the one in your local static directory. The /css/highlight.min.css file provided by Academic is equivalent to the github style from highlight.js.\nIf the highlight_style option is set, then /css/highlight.min.css is ignored, and the corresponding css file will be served from the cdnjs server. To see a list of available styles, visit the cdnjs page and search for links with the word \u0026ldquo;styles\u0026rdquo;.\nSee the highlight.js demo page for examples of available styles.\n Not all styles listed on the highlight.js demo page are available from the cdnjs server. If you want to use a style that is not served by cdnjs, just leave highlight_style unset, and place the corresponding css file in /static/css/highlight.min.css.    If you don\u0026rsquo;t want to change the default style that ships with Academic but you do want the style file served from the cdnjs server, set highlight_style = \u0026quot;github\u0026quot; in params.toml.   The highlight_style option is only recognized when set in params.toml. Setting highlight_style in your page\u0026rsquo;s preamble has no effect.\nJupyter Notebook View the guide to blogging with Jupyter Notebooks.\nTwitter tweet To include a single tweet, pass the tweet’s ID from the tweet\u0026rsquo;s URL as parameter to the shortcode:\n{{\u0026lt; tweet 666616452582129664 \u0026gt;}}  GitHub gist {{\u0026lt; gist USERNAME GIST-ID \u0026gt;}}  $\\rm \\LaTeX$ math Prior to adding math content, math can be enabled for your site in params.toml.\n$$\\left [ – \\frac{\\hbar^2}{2 m} \\frac{\\partial^2}{\\partial x^2} + V \\right ] \\Psi = i \\hbar \\frac{\\partial}{\\partial t} \\Psi$$  $$\\left [ – \\frac{\\hbar^2}{2 m} \\frac{\\partial^2}{\\partial x^2} + V \\right ] \\Psi = i \\hbar \\frac{\\partial}{\\partial t} \\Psi$$\nAlternatively, inline math can be written by wrapping the formula with only a single $:\nThis is inline: $\\mathbf{y} = \\mathbf{X}\\boldsymbol\\beta + \\boldsymbol\\varepsilon$  This is inline: $\\mathbf{y} = \\mathbf{X}\\boldsymbol\\beta + \\boldsymbol\\varepsilon$\nNote that Markdown special characters need to be escaped with a backslash so they are treated as math rather than Markdown. For example, * and _ become \\* and \\_ respectively.\nMultiline equations The standard LaTeX line break consisting of 2 backslashes needs to be replaced with 6 backslashes:\n$$f(k;p\\_0^\\*) = \\begin{cases} p\\_0^\\* \u0026amp; \\text{if }k=1, \\\\\\\\\\\\ 1-p\\_0^\\* \u0026amp; \\text {if }k=0.\\end{cases}$$  $$f(k;p_0^*) = \\begin{cases} p_0^* \u0026amp; \\text{if }k=1, \\\\\n1-p_0^* \u0026amp; \\text {if }k=0.\\end{cases}$$\nPublication abstracts As Hugo and Academic attempt to parse TOML, Markdown, and LaTeX content in the abstract, the following guidelines should be followed just for the publication abstract and abstract_short fields:\n escape each LaTeX backslash (\\) with an extra backslash, yielding \\\\ escape each LaTeX underscore (_) with two backslashes, yielding \\\\_  Hence, abstract: \u0026quot;${O(d_{\\max})}$\u0026quot; becomes abstract: \u0026quot;${O(d\\\\_{\\\\max})}$\u0026quot;.\nTable Code:\n| Command | Description | | ------------------| ------------------------------ | | `hugo` | Build your website. | | `hugo serve -w` | View your website. |  Result:\n   Command Description     hugo Build your website.   hugo serve -w View your website.    Alerts Alerts are a useful feature that add side content such as tips, notes, or warnings to your articles. They are especially handy when writing educational tutorial-style articles. Use the corresponding shortcodes to enable alerts inside your content:\n{{% alert note %}} Here's a tip or note... {{% /alert %}}  This will display the following note block:\n Here\u0026rsquo;s a tip or note\u0026hellip;   {{% alert warning %}} Here's some important information... {{% /alert %}}  This will display the following warning block:\n Here\u0026rsquo;s some important information\u0026hellip;   Table of Contents A table of contents may be particularly useful for long posts or tutorial/documentation type content. Use the {{% toc %}} shortcode anywhere you wish within your Markdown content to automatically generate a table of contents.\n Footnote example. ^  ","date":1460822400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1460822400,"objectID":"895623bf2fe567b85150a4e52f5cff43","permalink":"https://blog.codist.me/en/docs/writing-markdown-latex/","publishdate":"2016-04-17T00:00:00+08:00","relpermalink":"/en/docs/writing-markdown-latex/","section":"docs","summary":"Content can be written using Markdown, LaTeX math, and Hugo Shortcodes. Additionally, HTML may be used for advanced formatting.\n","tags":null,"title":"Writing content with Markdown, LaTeX, and Shortcodes","type":"docs"},{"authors":null,"categories":null,"content":" In this guide, we\u0026rsquo;ll learn how to blog in Academic using Jupyter Notebooks.\nHere\u0026rsquo;s a snippet from a Jupyter notebook, for example:\nprint(\u0026quot;I am a Jupyter Notebook!\u0026quot;)  I am a Jupyter Notebook!  Install Python and Jupyter Install Anaconda which includes Python 3 and Jupyter notebook.\nOtherwise, for advanced users, install Jupyter notebook with pip3 install jupyter.\nCreate a new blog post as usual Run the following commands in your Terminal, substituting \u0026lt;MY_WEBSITE_FOLDER\u0026gt; and my-post with the file path to your Academic website folder and a name for your blog post (without spaces), respectively:\ncd \u0026lt;MY_WEBSITE_FOLDER\u0026gt; hugo new --kind post post/my-post cd \u0026lt;MY_WEBSITE_FOLDER\u0026gt;/content/post/my-post/  Create or upload a Jupyter notebook Run the following command to start Jupyter within your new blog post folder. Then create a new Jupyter notebook (New \u0026gt; Python Notebook) or upload a notebook.\njupyter notebook  Convert notebook to Markdown jupyter nbconvert Untitled.ipynb --to markdown --NbConvertApp.output_files_dir=. # Copy the contents of Untitled.md and append it to index.md: cat Untitled.md | tee -a index.md # Remove the temporary file: rm Untitled.md  Edit your post metadata Open index.md in your text editor and edit the title etc. in the front matter according to your preference.\nTo set a featured image, place an image named featured into your post\u0026rsquo;s folder.\nFor other tips, such as using math, see the guide on writing content with Academic.\nAlternative approaches Alternatively, a Jupyter notebook can be embedded in a page by following one of the approaches below:\n Upload your notebook as a GitHub Gist and click Embed to copy and paste your hosted notebook into the body of content in Academic\n Convert your notebook to HTML using nbconvert --to html \u0026lt;NOTEBOOK_NAME\u0026gt;.ipynb. Then move the resulting HTML file to your page\u0026rsquo;s folder and embed it into the body of the page\u0026rsquo;s Markdown file using:\n\u0026lt;iframe src=\u0026quot;./\u0026lt;CONVERTED_NOTEBOOK_FILENAME\u0026gt;\u0026quot; width=\u0026quot;90%\u0026quot; height=\u0026quot;1000px\u0026quot; style=\u0026quot;border:none;\u0026quot;\u0026gt; \u0026lt;/iframe\u0026gt;   Upload your notebook to a cloud notebook service such as Microsoft Azure, Google Cloud Datalab or Kyso. Then click their Embed button, pasting their custom embedding code into the body of your page\u0026rsquo;s Markdown file\n Copy snippets of code from your notebook and paste them into the body of your page using Academic\u0026rsquo;s code highlighting\n   ","date":1549900800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549900800,"objectID":"6cd49d23b102de297ce14e8a77fdd726","permalink":"https://blog.codist.me/en/docs/jupyter/","publishdate":"2019-02-12T00:00:00+08:00","relpermalink":"/en/docs/jupyter/","section":"docs","summary":"In this guide, we\u0026rsquo;ll learn how to blog in Academic using Jupyter Notebooks.\nHere\u0026rsquo;s a snippet from a Jupyter notebook, for example:\nprint(\u0026quot;I am a Jupyter Notebook!\u0026quot;)  I am a Jupyter Notebook!  Install Python and Jupyter Install Anaconda which includes Python 3 and Jupyter notebook.\nOtherwise, for advanced users, install Jupyter notebook with pip3 install jupyter.\nCreate a new blog post as usual Run the following commands in your Terminal, substituting \u0026lt;MY_WEBSITE_FOLDER\u0026gt; and my-post with the file path to your Academic website folder and a name for your blog post (without spaces), respectively:","tags":null,"title":"Display Jupyter Notebooks with Academic","type":"docs"},{"authors":null,"categories":null,"content":" Sites built using Academic can be deployed in a large variety of ways due to the static nature of the generated website. The recommended deployment method alongside a few of the other most popular techniques are described below.\nIf using Netlify, your site will be built automatically, otherwise run the hugo command in your terminal to generate your site in the public/ folder - now it is ready to copy across to your host.\nWith Academic, you can make a great impression on your visitors with your own custom domain name.\nNetlify We recommend deploying your site with Netlify. Netlify is free and provides fast global access, automated deployment when you add or modify content, and one-click HTTPS security. Check out our guide to deploy with Netlify.\nGitHub Pages Go to Github and register for an account if you have not done so already. Github encourage using your real name as your username, and this can help your Github URL (which you will be assigned later) to have a professional appearance.\nInstall Git if it\u0026rsquo;s not already present on your system. You can check by running git --version in your Command Prompt/Terminal app.\nOnce you have created your Github account and setup Git on your computer, we will create two new repositories (often abbreviated as repos) on Github with the following names:\n academic-kickstart or any other name you like - we will save your content to this repo \u0026lt;USERNAME\u0026gt;.github.io where \u0026lt;USERNAME\u0026gt; is your Github username - we will save the generated website to this repo  To create the \u0026lt;USERNAME\u0026gt;.github.io repository, click the \u0026ldquo;+\u0026rdquo; icon in the top right corner and then choose “New Repository”.\nTo create the academic-kickstart repository, fork the Academic Kickstart repository and clone your fork with Git (download it to your computer) by replacing \u0026lt;USERNAME\u0026gt; in the following command with your Github username:\ngit clone https://github.com/\u0026lt;USERNAME\u0026gt;/academic-kickstart.git My_Website cd My_Website git submodule update --init --recursive  In your config.toml file, set baseurl = \u0026quot;https://\u0026lt;USERNAME\u0026gt;.github.io/\u0026quot;, where \u0026lt;USERNAME\u0026gt; is your Github username. Stop Hugo if it\u0026rsquo;s running and delete the public directory if it exists (by typing rm -r public/).\nAdd your .github.io repository into a submodule in a folder named public, replacing  with your Github username:\ngit submodule add -f -b master https://github.com/\u0026lt;USERNAME\u0026gt;/\u0026lt;USERNAME\u0026gt;.github.io.git public  Add everything to your local git repository and push it up to your remote repository on GitHub:\ngit add . git commit -m \u0026quot;Initial commit\u0026quot; git push -u origin master  Whilst running the above commands you may be prompted for your Github username and password.\nNext, regenerate your website\u0026rsquo;s HTML code by running Hugo and uploading the public submodule to GitHub:\nhugo cd public git add . git commit -m \u0026quot;Build website\u0026quot; git push origin master cd ..  Once Git has finished uploading your site to Github, you can open your new https://\u0026lt;USERNAME\u0026gt;.github.io website in your browser, substituting  with your Github username.\nAutomating deployment If you are feeling more adventurous, you can consider automating deployment so that when a change, such as a new blog post, is pushed to your academic-kickstart repository, your website (\u0026lt;USERNAME\u0026gt;.github.io repository) is automatically re-built. Check out the discussion forum for inspiration!\nIf you prefer easy automated deployments whenever you make a change to your site, we recommend deploying with Netlify (see above) rather than Github Pages.\nAmazon S3 By uploading the contents of your public folder to Amazon S3, your site can be served with dynamic scaling to almost unlimited traffic. This approach has the benefit of being one of the cheapest and most reliable hosting options available as you only pay for what you use.\nWeb host via FTP Use an FTP client to upload the contents of your public folder to a web host. This may be especially convenient for academic students and staff who are provided with university web space.\n","date":1514044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1514044800,"objectID":"00e64a8af4dd5116b95476a6691792dc","permalink":"https://blog.codist.me/en/docs/deployment/","publishdate":"2017-12-24T00:00:00+08:00","relpermalink":"/en/docs/deployment/","section":"docs","summary":"Sites built using Academic can be deployed in a large variety of ways due to the static nature of the generated website. The recommended deployment method alongside a few of the other most popular techniques are described below.\nIf using Netlify, your site will be built automatically, otherwise run the hugo command in your terminal to generate your site in the public/ folder - now it is ready to copy across to your host.","tags":null,"title":"Overview","type":"docs"},{"authors":null,"categories":null,"content":"If you choose a deployment option such as Netlify or Github pages, you will be automatically assigned a free URL for your website. You can further personalize your website with your own domain name.\nWe can highly recommend Namecheap for registering a domain, as they provide great value for money whilst providing fast support. To find a good domain that is available, try a mix of your first and last names or initials, with either a .com or .me ending.\nFor Netlify deployments, once your domain is registered, navigate to the Custom domains section of the Netlify admin panel and then follow their wizard to assign your domain to your site.\nFor Github deployments, you\u0026rsquo;ll need to login to your domain registrar to point your domain to Github, and create a CNAME file in the static folder of your website, so that Github knows your intentions. For more information, check out the domains guide by Github.\nRemember that after you have setup a custom domain, you will need to wait approximately 24-48 hours for the DNS to propagate and then you\u0026rsquo;ll need to update baseurl in your config.toml to your new URL, regenerate your site (refer to the previous section), and redeploy.\n","date":1514044800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1514044800,"objectID":"341e264abb31a89ef1bd4d4f1039f96f","permalink":"https://blog.codist.me/en/docs/domain/","publishdate":"2017-12-24T00:00:00+08:00","relpermalink":"/en/docs/domain/","section":"docs","summary":"If you choose a deployment option such as Netlify or Github pages, you will be automatically assigned a free URL for your website. You can further personalize your website with your own domain name.\nWe can highly recommend Namecheap for registering a domain, as they provide great value for money whilst providing fast support. To find a good domain that is available, try a mix of your first and last names or initials, with either a .","tags":null,"title":"Get Your Own Domain Name","type":"docs"},{"authors":null,"categories":null,"content":" It is possible to carry out many customizations without editing any code in the themes/academic/ folder, making it easier to update the framework in the future.\nCustom theme To customize the color theme, you can copy a theme such as themes/academic/data/themes/default.toml to data/themes/default.toml (at the root of your site, not in themes/academic/), creating the data/themes/ folders if they do not already exist. Now you can adjust the colors within your theme file.\nTo customize the font theme, you can copy a theme such as themes/academic/data/fonts/default.toml to data/fonts/default.toml (at the root of your site, not in themes/academic/), creating the data/fonts/ folders if they do not already exist. Now you can adjust the font size and family, choosing from the library of Google Fonts if you wish.\nIf you create your own theme, consider giving it a unique name and sharing your new color or font theme with the community.\nWebsite icon Save your main icon and mobile icon as square PNG images named icon.png (32x32 pixels) and icon-192.png (192x192 pixels), respectively. Place them in your root static/img/ folder.\nAnalytics To enable Google Analytics, add your tracking code in config/_default/config.toml similarly to googleAnalytics = \u0026quot;UA-12345678-9\u0026quot;.\nComments The Disqus commenting variable (disqusShortname) in config/_default/config.toml can be set to your own Disqus shortname to enable visitors to comment on your posts.\nAdd scripts (JS) To add a third party script, create a file named head_custom.html in a layouts/partials/ folder at the root of your website (not in the themes folder). Any HTML code added to this file will be included within your website\u0026rsquo;s \u0026lt;head\u0026gt;. Therefore, it\u0026rsquo;s suitable for adding custom metadata or third party scripts specified with the async attribute.\nWhereas for your own local scripts, let\u0026rsquo;s say that you have a JS file named custom.js. We can place your file in assets/js/ (create the folders within your website root if they don\u0026rsquo;t exist). Then open your config/_default/params.toml and set plugins_js = [\u0026quot;custom\u0026quot;], where custom is your JS filename without its extension.\nPermalinks Permalinks, or permanent links, are URLs to individual pages and posts on your website. They are permanent web addresses which can be used to link to your content. Using Hugo\u0026rsquo;s permalinks option these can be easily customized. For example, the blog post URL can be changed to the form yourURL/2016/05/01/my-post-slug by adding the following near the end of your config/_default/config.toml:\n[permalinks] post = \u0026quot;/:year/:month/:day/:slug\u0026quot;  Where :slug defaults to the filename of the post, excluding the file extension. However, slug may be overridden on a per post basis if desired, simply by setting slug = \u0026quot;my-short-post-title\u0026quot; in your post preamble.\nExample 2: let\u0026rsquo;s consider changing the URL path of posts from post/ to blog/. First, add the following parameters to your config/_default/config.toml:\n[permalinks] post = \u0026quot;/blog/:slug\u0026quot;  Then add aliases = [\u0026quot;/blog/\u0026quot;] to your post archive page at post/_index.md so that it can be accessed from the /blog/ URL.\nCustomize style (CSS) To personalize Academic, you can choose a colour theme and font theme in config.toml.\nFor further personalization, you can create your own colour theme and font theme.\nIf advanced style customization is required, CSS code can be written to override or enhance the existing styles.\nGiven some custom CSS named custom.css, we can place it in assets/css/ (create the folders within your website root if they don\u0026rsquo;t exist). Then open your config/_default/params.toml and set plugins_css = [\u0026quot;custom\u0026quot;], where custom is your CSS filename without its extension.\nOverride a template Hugo uses a template lookup which enables you to override any of Academic\u0026rsquo;s files without directly changing them. This can make it easier to update Academic in the future since you do not modify any of Academic\u0026rsquo;s files directly.\nTo override a template in the theme, you simply copy the file you are interested in from themes/academic/ and paste it in your site folder using a similar path. To understand how this works, you should familiarize yourself with template lookup. Finally, when you update Academic, remember to compare your version of the file against Academic\u0026rsquo;s one, in case you need to propagate any changes across.\nFor example, say we wish to add some HTML code to the navigation bar. Let\u0026rsquo;s copy the relevant file themes/academic/layouts/partials/navbar.html to layouts/partials/navbar.html (at the root of your site, not in themes/academic/), creating the layouts/partials/ folders if they do not already exist. Now you can add the HTML code you want to your copy of the file, which will override Academic\u0026rsquo;s version.\nDate Format Academic uses the following constants to format dates and times:\n   Type Options     Year 06 2006   Month 01 1 Jan January   Day 02 2 _2 (width two, right justified)   Weekday Mon Monday   Hours 03 3 15   Minutes 04 4   Seconds 05 5   AM/PM PM pm   Timezone MST   Offset -0700 -07 -07:00 Z0700 Z07:00    To modify the format, edit date_format and time_format in config/_default/params.toml using the above constants. For example, some common formats are:\n   Format Type     January 2, 2006 Date   01/02/06    Jan-02-06    Mon, 02 Jan 2006    Monday, 02 Jan 2006    15:04 Time   3:04 PM    15:04 MST     ","date":1461081600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461081600,"objectID":"4b575591f248fd10193e79c37560ce93","permalink":"https://blog.codist.me/en/docs/customization/","publishdate":"2016-04-20T00:00:00+08:00","relpermalink":"/en/docs/customization/","section":"docs","summary":"It is possible to carry out many customizations without editing any code in the themes/academic/ folder, making it easier to update the framework in the future.\nCustom theme To customize the color theme, you can copy a theme such as themes/academic/data/themes/default.toml to data/themes/default.toml (at the root of your site, not in themes/academic/), creating the data/themes/ folders if they do not already exist. Now you can adjust the colors within your theme file.","tags":null,"title":"Customization","type":"docs"},{"authors":null,"categories":null,"content":" Both the interface and content language can be changed to suit your needs.\nInterface The Interface Language is used to change the language throughout your site. The following interface languages are currently available: English, 中文 (简体), Español, Português, Deutsch, Euskara, Français, Italiano, 日本語, 한국어, Nederlands, Polski, Русский, Türkçe, Tiếng Việt and Catalan.\nThe interface text is stored in language files which are collected from Academic\u0026rsquo;s themes/academic/i18n/ folder, as well as an i18n/ folder at the root of your project.\nTo edit the interface text, copy themes/academic/i18n/en.yaml to i18n/en.yaml (relative to the root of your website). Open the new file and make any desired changes to the text appearing after translation:. Note that the language files are formatted in YAML syntax.\nTo translate the interface text to another language, follow the above instructions, but name the new file in the form i18n/X.yaml where X is the appropriate ISO/RFC5646 language identifier for the translation. Then follow the brief instructions in the Language section at the bottom of your config.toml. To change the default language used by Academic, set defaultContentLanguage to the desired language identifier in your configuration file.\nTo translate the navigation bar, you can edit the default [[main]] instances in config/_default/menu.toml. However, for a multilingual site, you will need to duplicate this file to config/_default/menu.XX.toml and translate its menu items, where XX is the language identifier (e.g. menu.zh.toml for Simplified Chinese). Thus, the navigation bar can be displayed in multiple languages.\nContent In this section, you will learn how to create content in multiple languages.\nMove all you existing content in content/ to a sub-folder named with the appropriate ISO/RFC5646 language identifier. For example, if your existing content is in English, move your content to content/en/.\nTo create content in an additional language, create a sub-folder in content/ named with the appropriate ISO/RFC5646 language identifier. Then place your translated content in here, just as you would for your primary language content.\nIf a page has been translated into multiple languages, a language chooser will appear in the navigation bar to allow the user to select which language they would like to view the page in.\nYou may also need to configure config/_default/languages.toml with the relevant content directories. This can be performed by creating a config section for each language and setting its contentDir to the relevant path.\nFor further details on Hugo\u0026rsquo;s internationalization and multilingual features, refer to the associated Hugo documentation.\n","date":1461081600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461081600,"objectID":"9f448db5d5ccdb2cde142f0a7fba9d94","permalink":"https://blog.codist.me/en/docs/language/","publishdate":"2016-04-20T00:00:00+08:00","relpermalink":"/en/docs/language/","section":"docs","summary":"Both the interface and content language can be changed to suit your needs. Interface The Interface Language is used to change the language throughout your site. The following interface languages are currently available: English, 中文 (简体), Español, Português, Deutsch, Euskara, Français,","tags":null,"title":"Language and translation","type":"docs"},{"authors":null,"categories":null,"content":" Empower your users to search your website content for keywords so that they can quickly discover relevant content.\nIf search is enabled, a search icon will automatically appear in the navigation bar and a search box will appear in the sidebar of any content using the docs/tutorial layout (as can be seen on this site). Clicking the search icon will toggle the search dialog.\nKeyboard shortcuts are available to facilitate searching. Pressing / will toggle the search dialog and pressing ESC will close the dialog.\n Enable users to quickly discover relevant content by searching from the navigation bar.   It\u0026rsquo;s possible to customize the search system to your needs. The search feature may either be powered by the built-in algorithm (default) or powered by Algolia. Alternatively, you can disable the integrated search engine and instead create your own third party (e.g. Google) search widget by following the guide in the Alternatives section below.\nBuilt-in Academic comes with its own integrated search engine. If it\u0026rsquo;s not already enabled, it can be enabled by setting engine = 1 under [search] in config/_default/params.toml.\nNote that this search engine runs entirely in the web browser on the visitor\u0026rsquo;s device. Thus, it is not scalable to an extremely large number of pages. If you have a very large amount of content and find the search running slowly, we recommend opting for a server side search engine such as Algolia or Google (see below).\nAlgolia  Under [search] in config/_default/params.toml set engine = 2 Register a free Algolia account and follow their wizard to create a new search app Build your site by running the hugo command in Terminal or Command Prompt Upload the generated public/index.json file to the Indicies page in your Algolia dashboard Paste the Algolia App ID, API Key, and Index Name from the Indicies and API Keys pages of your Algolia Dashboard into the [search.algolia] section in config/_default/params.toml Under [search] in config/_default/params.toml, set engine = 2 to activate the Algolia search engine Serve (or build and upload) your site and test out the shiny new search widget on your home page 😄  Note that whenever your content changes (e.g. you add a new page), you will need to re-build and re-upload the search index to Algolia.\nDisable To disable searching, open config/_default/params.toml and set engine = 0 in the [search] section.\nAlternatives Alternative search providers, such as Google search, are not integrated with Academic, but can be implemented by creating your own custom widget. For example,\n Create a custom widget in your /content/home/ folder Signup for Google Custom Search Engine Paste the HTML which Google provide into the body of your custom widget  ","date":1532275200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1532275200,"objectID":"a0415b49c9410c15a8694fed28aa36ae","permalink":"https://blog.codist.me/en/docs/search/","publishdate":"2018-07-23T00:00:00+08:00","relpermalink":"/en/docs/search/","section":"docs","summary":"Empower your users to search your website content for keywords so that they can quickly discover relevant content.\nIf search is enabled, a search icon will automatically appear in the navigation bar and a search box will appear in the sidebar of any content using the docs/tutorial layout (as can be seen on this site). Clicking the search icon will toggle the search dialog.\nKeyboard shortcuts are available to facilitate searching.","tags":null,"title":"Search","type":"docs"},{"authors":null,"categories":null,"content":" Here are a few tips for migrating an existing website from Jekyll to Hugo. These tips can be applied in conjunction with following Hugo Academic\u0026rsquo;s getting started guide.\nMove static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like\n▾ \u0026lt;root\u0026gt;/ ▾ images/ logo.png  should become\n▾ \u0026lt;root\u0026gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you\u0026rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.\nFix content Depending on the amount of customization that was done for each post in Jekyll, this step will require more or less effort. There are no hard and fast rules here except that hugo server --watch and the Hugo Academic example site are your friends. Test your changes and fix errors as needed.\nPublish The default is for Jekyll to publish the website to a _site directory, whereas Hugo publishes to a public directory.\nA practical example Alexandre Normand migrated his website from Jekyll to Hugo in less than a day. You can see all his changes by looking at this GitHub diff. However, bear in mind that this example is not specific to the Academic theme nor does it use the latest version of Hugo.\n","date":1394380800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1394380800,"objectID":"cf6ad5881c0080f4168cf21c81c91dee","permalink":"https://blog.codist.me/en/docs/migrate-from-jekyll/","publishdate":"2014-03-10T00:00:00+08:00","relpermalink":"/en/docs/migrate-from-jekyll/","section":"docs","summary":"Here are a few tips for migrating an existing website from Jekyll to Hugo. These tips can be applied in conjunction with following Hugo Academic\u0026rsquo;s getting started guide.\nMove static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like","tags":null,"title":"Migrate from Jekyll","type":"docs"},{"authors":null,"categories":null,"content":" To migrate your website from Wordpress to Academic is a two phase process:\nPhase One First, install the WordPress to Jekyll Exporter plugin into your Wordpress installation by following these steps:\n Place the WordPress to Jekyll Exporter plugin in /wp-content/plugins/ folder Activate plugin in WordPress dashboard Select Export to Jekyll from the Tools menu  The WordPress plugin converts all posts, pages, taxonomies, metadata, and settings to Markdown and YAML with just a single click. A zip file will be generated, containing _config.yml, pages, and _posts folder containing .md Markdown files for each post.\nPhase Two Given the Jekyll formatted contents of your generated zip file in the step above, proceed to follow the guide on importing a Jekyll site into Academic.\n","date":1512230400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1512230400,"objectID":"23bec1c48948c2ee6a77b19a2e2986d2","permalink":"https://blog.codist.me/en/docs/migrate-from-wordpress/","publishdate":"2017-12-03T00:00:00+08:00","relpermalink":"/en/docs/migrate-from-wordpress/","section":"docs","summary":"To migrate your website from Wordpress to Academic is a two phase process:\nPhase One First, install the WordPress to Jekyll Exporter plugin into your Wordpress installation by following these steps:\n Place the WordPress to Jekyll Exporter plugin in /wp-content/plugins/ folder Activate plugin in WordPress dashboard Select Export to Jekyll from the Tools menu  The WordPress plugin converts all posts, pages, taxonomies, metadata, and settings to Markdown and YAML with just a single click.","tags":null,"title":"Migrate from Wordpress","type":"docs"},{"authors":null,"categories":null,"content":"Please use the issue tracker to report bugs or submit feature requests. Alternatively, feel free to modify the code and submit a pull request on Github.\nFor general questions about Hugo, there is a Hugo discussion forum.\n","date":1461081600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1504368000,"objectID":"9a764451fa9ed084b248aa8354b0324c","permalink":"https://blog.codist.me/en/docs/contribute/","publishdate":"2016-04-20T00:00:00+08:00","relpermalink":"/en/docs/contribute/","section":"docs","summary":"Please use the issue tracker to report bugs or submit feature requests. Alternatively, feel free to modify the code and submit a pull request on Github.\nFor general questions about Hugo, there is a Hugo discussion forum.","tags":null,"title":"Feedback \u0026 Contributing","type":"docs"},{"authors":null,"categories":null,"content":"Common questions and answers will be listed here.\nI cloned/downloaded Academic but Hugo produces errors when using it with my existing Hugo site\nAcademic is a website framework rather than just a theme. Therefore, you must follow the full installation guide found on the Demo/Documentation website or in the Github Readme. If you still have problems, first try running Hugo on the Academic Example Site found in the themes/academic/exampleSite folder and then compare the configuration parameters in the Example Site\u0026rsquo;s config.toml and content files with the files in your existing site.\nHosting your site with Netlify or Cloudflare and experience strange behavior such as filters not working?\nDisable post-processing steps such as minification in your Netlify/Cloudflare admin panel.\nPublications and other content are not sorted by newest first\nHugo/TOML require that the value for the date field should be in TOML format, as per frontmatter of the content/publication/ files in the example site. If you want to use a partial date, such as year, you should still complete a full date to make a valid TOML date format.\nIssue parsing LaTeX in publication abstract\nLet\u0026rsquo;s consider the following LaTeX which fails to parse correctly:\nabstract = \u0026quot;${O(d_{\\max})}$\u0026quot;  This is a side effect of Academic and Hugo attempting to parse TOML, Markdown and LaTeX content in the abstract. The solution is to:\n escape each LaTeX backslash (\\) with an extra backslash, yielding \\\\ escape each LaTeX underscore (_) with two backslashes, yielding \\\\_.  Hence, editing the above example, we get:\nabstract = \u0026quot;${O(d\\\\_{\\\\max})}$\u0026quot;  Cannot achieve line break in multiline equation (LaTeX/Mathjax)\n\\\\ usually achieves a line break in a multiline LaTeX/Mathjax equation, but due to Hugo\u0026rsquo;s Markdown parser it doesn\u0026rsquo;t.\nSolution: use 6 backslashes for a line break, for example:\n$$\\begin{eqnarray} y \u0026amp;=\u0026amp; 1+1 \\\\\\\\\\\\ \u0026amp;=\u0026amp; 2 \\end{eqnarray}$$  ","date":1460217600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1511280000,"objectID":"956da29f025cba37fca9fe6b80ab5d48","permalink":"https://blog.codist.me/en/docs/faq/","publishdate":"2016-04-10T00:00:00+08:00","relpermalink":"/en/docs/faq/","section":"docs","summary":"Troubleshoot common issues.","tags":null,"title":"Troubleshooting","type":"docs"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Academic\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"96344c08df50a1b693cc40432115cbe3","permalink":"https://blog.codist.me/en/talk/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/en/talk/example/","section":"talk","summary":"An example talk using Academic's Markdown slides feature.","tags":[],"title":"Example Talk","type":"talk"},{"authors":null,"categories":null,"content":" Release Notes tell you what\u0026rsquo;s new in Academic. As always, we welcome your feedback. You can also file a bug report. Want to update to this version? Refer to the update guide in conjunction with the parameter changes mentioned in the Breaking Changes section below.\nSee what\u0026rsquo;s new in Academic! Welcome to the v4.3.1 release of Academic. There are a number of exciting updates in this version that we hope you will like, including:\n A listing page will be generated for your courses, tutorials, and documentation - view the new demo  For when you have multiple files using the docs layout which are organized in a parent folder like content/courses/python-101/ The corresponding example Markdown files can be found here  Active link highlighting in the navigation bar has been extended to work for non-home pages  Active link highlighting and scrolling to navigation links now works with multiple widget-pages and any other pages such as those using the docs layout - check out the latest demo site to see it in action with the Tutorials page  Slides - if you use code highlighting, the code highlighting style can now be chosen on a per deck basis to match the color theme of your slide deck (see Slides below) Converted CSS styling to SCSS for tighter integration with Bootstrap and Academic\u0026rsquo;s theming system  This refactoring is unlikely to affect any custom CSS in CSS Plugins  Added a search box to the 404 error page so that visitors can easily discover relevant content Fixes (see below) for author system including author error on Windows and fixes for some tag/category links that were broken by breaking changes in Hugo v0.55  Most front matter snippets in the documentation have recently been converted from TOML to YAML. The example widgets and configuration files remain in TOML format. There is no need to convert any files in your site since Academic and Hugo continue to support both YAML and TOML formats. An online YAML\u0026lt;\u0026ndash;\u0026gt;TOML converter is available should you wish to convert your front matter. This change is to make it easier to edit content in popular Markdown editors like Typora and Visual Studio Code.\nBreaking changes Here are some considerations to make when updating Academic from the previous version, v4.2:\n Hugo Extended v0.55.6+ is required Rename the author folder to authors In config/_default/config.toml, remove \u0026quot;CSS\u0026quot; from the site [outputs] section, yielding:\n[outputs] home = [ \u0026quot;HTML\u0026quot;, \u0026quot;RSS\u0026quot;, \u0026quot;JSON\u0026quot; ] section = [ \u0026quot;HTML\u0026quot;, \u0026quot;RSS\u0026quot; ]  If you deploy your site with Netlify, login to Netlify and choose Settings \u0026gt; Build \u0026amp; deploy \u0026gt; Build image selection and choose Ubuntu Xenial 16.04 as the build image. Previous Netlify build images do not fully support all Hugo features.\n If using the docs layout, add layout: docs in YAML (or layout = \u0026quot;docs\u0026quot; in TOML) to content/courses/_index.md\n  Slides The author of a slide deck can now choose a code highlighting style to match the color theme of the slide deck, if code highlighting is enabled in config/_default/params.toml.\nFor a light slide deck, consider adding the following to the bottom of your slide front matter:\n[slides] theme = \u0026quot;white\u0026quot; # Reveal JS theme name highlight_style = \u0026quot;github\u0026quot; # Highlight JS theme name  Whereas, for a dark slide deck, consider adding the following to the bottom of your slide front matter:\n[slides] theme = \u0026quot;black\u0026quot; # Reveal JS theme name highlight_style = \u0026quot;dracula\u0026quot; # Highlight JS theme name  Refer to the updated docs for further info.\nPages  fix: build fails on Windows: \u0026ldquo;Error: Could not find author page at\u0026hellip;\u0026rdquo; (#1068) fix authors no longer shown on publication page fix some tag and category links broken fix: Hugo 0.54+ breaks links to user profiles with non-ASCII usernames  workaround the Hugo bug by performing a check to remove invalid links to user profiles (i.e. a normal, unlinked author name will be displayed in the page metadata in this case)   Publications  refactor publication types as TOML at themes/academic/data/publication_types.toml  Widgets  fix inconsistent column widths in People widget  Shortcodes  fix Gallery shortcode: remove Hugo 0.55+ deprecation warning  Misc  Update HighlightJS from 9.12.0 to 9.15.6 (#1075)  Adds support for more languages including plaintext and SAS See https://github.com/highlightjs/highlight.js/blob/master/CHANGES.md   Thank you Last but certainly not least, a big Thank You to all the folks that helped to make Academic even better.\nHas Academic helped you? Please consider supporting Academic.\n","date":1556294400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1556294400,"objectID":"9727c8f0a31905e337d5ad0e000178b7","permalink":"https://blog.codist.me/en/updates/v4.3.1/","publishdate":"2019-04-27T00:00:00+08:00","relpermalink":"/en/updates/v4.3.1/","section":"updates","summary":"Release Notes tell you what\u0026rsquo;s new in Academic. As always, we welcome your feedback. You can also file a bug report. Want to update to this version? Refer to the update guide in conjunction with the parameter changes mentioned in the Breaking Changes section below.\nSee what\u0026rsquo;s new in Academic! Welcome to the v4.3.1 release of Academic. There are a number of exciting updates in this version that we hope you will like, including:","tags":null,"title":"Version 4.3 (May 2019)","type":"updates"},{"authors":null,"categories":null,"content":" Release Notes tell you what\u0026rsquo;s new in Academic. As always, we welcome your feedback. You can also file a bug report. Want to update to this version? Refer to the update guide in conjunction with the parameter changes mentioned in the Breaking Changes section below.\nSee what\u0026rsquo;s new in Academic! Welcome to the v4.2.5 release of Academic which adds support for the major new version of Hugo, Hugo v0.55.\nThese release notes also cover all previous patches (bug fixes) for v4.2.\nBreaking changes Hugo v0.55.2+ required\nNote that Hugo v0.55.0 and v0.55.1 have many bugs are incompatible.\nWidgets  fix text color option text_color_light = true only working in Safari fix People widget error \u0026lt;.Path\u0026gt;: can't evaluate field Dir in type string fix Slider text color - should be light text on dark background (not dark text)  Search  the search dialog is now more intuitive for users to close.  Other  fix: page metadata (e.g. date) no longer displayed in page header or in listings fix day/night mode when highlight=false or highlight_style is set in params.toml fix page resource links (e.g. PDF, Cite, etc.) not displayed fix pagination link error about RelPermalink  Thank you Last but certainly not least, a big Thank You to all the folks that helped to make Academic even better.\nHas Academic helped you? Please consider supporting Academic.\n","date":1555603200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555603200,"objectID":"17a8c0b23d6e80949cbff3e2a72db0ac","permalink":"https://blog.codist.me/en/updates/v4.2.5/","publishdate":"2019-04-19T00:00:00+08:00","relpermalink":"/en/updates/v4.2.5/","section":"updates","summary":"Release Notes tell you what\u0026rsquo;s new in Academic. As always, we welcome your feedback. You can also file a bug report. Want to update to this version? Refer to the update guide in conjunction with the parameter changes mentioned in the Breaking Changes section below.\nSee what\u0026rsquo;s new in Academic! Welcome to the v4.2.5 release of Academic which adds support for the major new version of Hugo, Hugo v0.55.","tags":null,"title":"Version 4.2.5 (April 2019)","type":"updates"},{"authors":["Nelson Bighetti"],"categories":null,"content":" Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including code and math.\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"https://blog.codist.me/en/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/en/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":null,"categories":null,"content":" Release Notes tell you what\u0026rsquo;s new in Academic. As always, we welcome your feedback. You can also file a bug report. Want to update to this version? Refer to the update guide in conjunction with the parameter changes mentioned in the Breaking Changes section below.\nSee what\u0026rsquo;s new in Academic! Welcome to the v4.2 release of Academic. There are a number of exciting updates in this version that we hope you will like, including:\n Improved Widget System  Improved Widget Pages Utilizes Hugo\u0026rsquo;s new headless page mode  Added Preprint, Thesis, and Patent as publication types  See the Publications section below  Improved appearance of Experience \u0026amp; Accomplishments widgets on mobile devices Significant improvements to the documentation, especially on using widgets to build the homepage Auto update the copyright year in the site footer  See the Other section below  Several bug fixes (see below for details) New option to customize homepage section spacing   Version 4.2 adds support for Preprint, Thesis, and Patent as publication types.   Breaking changes Here are some considerations to make when updating Academic from the previous version, v4.1.0:\n Download the new homepage file and move it to content/home/index.md  This file now forms the parent of all your homepage sections (without it, your homepage will no longer render)  Add headless = true to the front matter of all homepage sections (i.e. all files in content/home/) and any widget page sections Convert any widget pages by:  Deleting their _index.md file Creating an index.md file with the new widget page front matter   Publications  Added Preprint, Thesis, and Patent as publication types (#769)  View the new list of mappings Note that previous \u0026ldquo;Manuscript\u0026rdquo; type was renamed to \u0026ldquo;Preprint\u0026rdquo;   Widgets  Improve appearance of Experience \u0026amp; Accomplishments widgets  New mobile first approach improves style of widgets on small devices  Add option to customize section spacing Fix citation view not working in Pages or Featured widgets (#961) Fix tag and category filters not working in Pages and Featured widgets (#989) Fix exclude_past and exclude_future not working in Pages or Featured widgets Fix custom sorting not working in Pages or Featured widgets Fix \u0026ldquo;See More\u0026rdquo; link in Pages widget not appearing Fix Citation View - do not colour authors as links Fix Hero text color when text_color_light = false  Other  Add ability to auto update the copyright year in the site footer  To use, add {year} to Copyright option in config.toml. Displays current year.   Language Packs  Update Chinese translation (#979)  Thank you Last but certainly not least, a big Thank You to all the folks that helped to make Academic even better.\nHas Academic helped you? Please consider supporting Academic.\n","date":1552752000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1552752000,"objectID":"972929c0c573001a1bdfdf4094aba0c8","permalink":"https://blog.codist.me/en/updates/v4.2.0/","publishdate":"2019-03-17T00:00:00+08:00","relpermalink":"/en/updates/v4.2.0/","section":"updates","summary":"Release Notes tell you what\u0026rsquo;s new in Academic. As always, we welcome your feedback. You can also file a bug report. Want to update to this version? Refer to the update guide in conjunction with the parameter changes mentioned in the Breaking Changes section below.\nSee what\u0026rsquo;s new in Academic! Welcome to the v4.2 release of Academic. There are a number of exciting updates in this version that we hope you will like, including:","tags":null,"title":"Version 4.2 (April 2019)","type":"updates"},{"authors":null,"categories":null,"content":" Release Notes tell you what\u0026rsquo;s new in Academic. As always, we welcome your feedback. You can also file a bug report. Want to update to this version? Refer to the update guide in conjunction with the parameter changes mentioned in the Breaking Changes section below.\nSee what\u0026rsquo;s new in Academic! Welcome to the v4.1 release of Academic. This version is all about widgets and publications! There are a number of exciting updates in this version that we hope you will like, including:\n Publication Search  In addition to the site search, a search box has been added to the publication archive to enable filtering publications by any attribute This enables visitors to more easily discover relevant content by filtering author, publication, etc.  Hero widget makeover  The Hero widget now supports multiple paragraphs and displaying an image (in addition to the optional background image) View the new hero options used to create the Demo  Easily apply a background to any homepage section  Choose from a range of background options including color, gradient, and image See the Demos section and its corresponding front matter options  Create a Featured Blog Posts section using the new Featured widget  The flexibility of the new Featured widget can be seen in the updated featured.md  The Photo Gallery now generates web-friendly thumbnails  It\u0026rsquo;s no longer necessary to use third party software to make photos web-friendly  The Talk section can now be split into a Past Talks section and an Upcoming Talks section  Refer to the new exclude_past and exclude_future filters in the demo Talk section    Enable visitors to easily discover relevant publications by searching.   Breaking changes Here are some considerations to make when updating Academic from the previous version, v4.0.0:\n Rename abstract_short in publications and talks to summary (if used) Rename url_custom to links in front matter of content (if used) Remove [header] from the Hero widget (if used) and replace it with the new [background] options The Hero Carousel widget has been renamed to Slider  If using it, update widget in the front matter to widget = \u0026quot;slider\u0026quot;  Posts, Talks, and Publications widgets have been replaced with a Pages widget  Upgrade the front matter of your Posts, Talks, and Publications sections to the new version  Featured Talks/Publications widgets have been replaced with a Featured widget  Upgrade the front matter of your Featured Talks and Featured Publications sections to the new version demoed in featured.md  Projects and Custom widgets have been replaced with the new Portfolio and Blank widgets  Essentially, the Projects and Custom widgets have been renamed and their front matter upgraded to be consistent with the new Pages and Featured widgets (i.e. there are now many more front matter options to personalize their functionality and appearance) Refer to the Projects and Demo sections which use the new Portfolio and Blank widgets Some existing Projects and Custom widgets may possibly continue to work even without upgrading your sections to use these new widgets  In the front matter of any talks, rename date, time_start, time_end options to publishDate, date, and date_end, respectively (See #721)  Widgets Hero widget makeover\n Support multiple paragraphs in the body of the widget Add optional image (hero_media) which appears on the right side of the widget Icon support for the [cta] call-to-action button using icon and icon_pack Add optional alternative call-to-action link, [cta_alt] Add optional note ([cta_note]) underneath the CTA button Like all widgets, new background options can be set for the Hero widget View the new hero options used to create the Demo  Users  Add author index page to list all authors at YOUR_URL/authors/  Talks  Fix all_day option not working in list and compact views  Projects  Fix the layout of the Project widget when using Card view  This fully reverts the Card view from a tabular layout back to a masonry layout, similar to Pinterest  Fix the new v4.0.0 post_view, publication_view, talk_view options not working on project pages  Thank you Last but certainly not least, a big Thank You to all the folks that helped to make Academic even better.\nHas Academic helped you? Please consider supporting Academic.\n","date":1549987200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549987200,"objectID":"e257c0f8c1ddd3d388eb5cdbbff79e37","permalink":"https://blog.codist.me/en/updates/v4.1.0/","publishdate":"2019-02-13T00:00:00+08:00","relpermalink":"/en/updates/v4.1.0/","section":"updates","summary":"Release Notes tell you what\u0026rsquo;s new in Academic. As always, we welcome your feedback. You can also file a bug report. Want to update to this version? Refer to the update guide in conjunction with the parameter changes mentioned in the Breaking Changes section below.\nSee what\u0026rsquo;s new in Academic! Welcome to the v4.1 release of Academic. This version is all about widgets and publications! There are a number of exciting updates in this version that we hope you will like, including:","tags":null,"title":"Version 4.1 (February 2019)","type":"updates"},{"authors":["Nelson Bighetti"],"categories":[],"content":" from IPython.core.display import Image Image('https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png')  print(\u0026quot;Welcome to Academic!\u0026quot;)  Welcome to Academic!  Install Python and Jupyter Install Anaconda which includes Python 3 and Jupyter notebook.\nOtherwise, for advanced users, install Jupyter notebook with pip3 install jupyter.\nCreate a new blog post as usual Run the following commands in your Terminal, substituting \u0026lt;MY_WEBSITE_FOLDER\u0026gt; and my-post with the file path to your Academic website folder and a name for your blog post (without spaces), respectively:\ncd \u0026lt;MY_WEBSITE_FOLDER\u0026gt; hugo new --kind post post/my-post cd \u0026lt;MY_WEBSITE_FOLDER\u0026gt;/content/post/my-post/  Create or upload a Jupyter notebook Run the following command to start Jupyter within your new blog post folder. Then create a new Jupyter notebook (New \u0026gt; Python Notebook) or upload a notebook.\njupyter notebook  Convert notebook to Markdown jupyter nbconvert Untitled.ipynb --to markdown --NbConvertApp.output_files_dir=. # Copy the contents of Untitled.md and append it to index.md: cat Untitled.md | tee -a index.md # Remove the temporary file: rm Untitled.md  Edit your post metadata Open index.md in your text editor and edit the title etc. in the front matter according to your preference.\nTo set a featured image, place an image named featured into your post\u0026rsquo;s folder.\nFor other tips, such as using math, see the guide on writing content with Academic.\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"6e929dc84ed3ef80467b02e64cd2ed64","permalink":"https://blog.codist.me/en/post/jupyter/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/en/post/jupyter/","section":"post","summary":"Learn how to blog in Academic using Jupyter notebooks","tags":[],"title":"Display Jupyter Notebooks with Academic","type":"post"},{"authors":[],"categories":[],"content":" Welcome to Slides Academic\nFeatures  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026quot;blueberry\u0026quot; if porridge == \u0026quot;blueberry\u0026quot;: print(\u0026quot;Eating...\u0026quot;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = \\;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}}  Press Space to play!\nOne  Two  Three \nA fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears  Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}}  Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view   Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links   night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links  Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026quot;/img/boards.jpg\u0026quot; \u0026gt;}} {{\u0026lt; slide background-color=\u0026quot;#0000FF\u0026quot; \u0026gt;}} {{\u0026lt; slide class=\u0026quot;my-style\u0026quot; \u0026gt;}}  Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://blog.codist.me/en/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/en/slides/example/","section":"slides","summary":"An introduction to using Academic's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":" Release Notes tell you what\u0026rsquo;s new in Academic. As always, we welcome your feedback. You can also file a bug report. Want to update to this version? Refer to the update guide in conjunction with the parameter changes mentioned in the Breaking Changes section below.\nSee what\u0026rsquo;s new in Academic! Welcome to the v4 release of Academic. This version is all about people! There are a number of exciting updates in this version that we hope you will like, including:\n User profile system  Displays a profile page for every author and enables visitors to discover content authored by them  Fully personalized contact links  Create any number of contact links in the Contact widget - easily link to your Twitter, WhatsApp, Skype, Wechat, Weibo, etc.  People widget  Enables organisations to easily introduce their staff and organisation structure  Blog with Jupyter Notebooks  Learn how to blog in Academic using Jupyter notebooks  Re-usable About widget  Great for showcasing team members   Breaking changes Here are some considerations to make when updating Academic from the previous version, v3.3:\nConfiguration and About Widget Hugo v0.53+ required.\nUpgrade your config to the easier to manage multi-file structure\n note that some variables have been moved or renamed (such as their prefixes removed, especially for those in square brackets) the explicit telegram, skype, keybase, and discussion options are deprecated but they are still supported with the new contact_links (see next item) contact_links in params.toml enables you to add any number of custom contact links, such as Twitter, WhatsApp, Skype, Wechat, Weibo, etc.  Rename the list_format option to view in the front matter of post, talk, and publication widgets and index pages. Adjust its value based on the new mappings:\n 1 = List (previously Simple) 2 = Compact (previously Stream) 3 = Card (previously Detailed) 4 = Citation (previously APA and MLA), only available for publications  Optionally, edit the value of citation_style in params.toml to APA or MLA  5 = Showcase (large images), only available for projects  Also, in params.toml, rename the following project options and adjust their values according to the above mapping:\n post_format -\u0026gt; post_view talk_format -\u0026gt; talk_view publication_format -\u0026gt; publication_view  If you are using a non-English language pack, you may need to synchronise the fields with the latest English language pack as a number of new items were added.\nUser Accounts Create a user account for yourself based on the admin template.\nEach folder name in content/author/ corresponds to a username. Usernames must be lowercase with any spaces replaced with hyphens (-). ASCII alphanumeric character set is recommended. You can then enter a username in the authors field of a page in order to link to a user profile, e.g. authors = [\u0026quot;admin\u0026quot;].\nPublications If using Selected Publications widget:\n Edit home/publications_selected.md to convert widget = \u0026quot;publications_selected\u0026quot; to widget = \u0026quot;publications_featured\u0026quot; Update the front matter of any featured publications to convert selected = true to featured = true  Publication types (\u0026ldquo;Journal Article\u0026rdquo; etc.) have finally been moved from the config to the language packs. Currently, they have been added to the English pack and can be translated as usual for the other language packs.\nTalks If using Selected Talks widget:\n Edit home/talks_selected.md to convert widget = \u0026quot;talks_selected\u0026quot; to widget = \u0026quot;talks_featured\u0026quot; Update the front matter of any featured talks to convert selected = true to featured = true  For talks, if you do not wish to display a time for the talk, just add all_day = true to the talk\u0026rsquo;s front matter.\nCustom CSS and JS If you are using custom CSS/JS, move custom JS/CSS from static/ to assets/ folder (create the folder if it does not exist). Keep it under js or css subdirectory as before.\nThen use the following options in the new params.toml to load your custom scripts:\n# Load CSS and JS plugins # E.g. To load `/assets/css/custom.css`, set `plugins_css = [\u0026quot;custom\u0026quot;]`. # E.g. To load `/assets/js/custom.js`, set `plugins_js = [\u0026quot;custom\u0026quot;]`. plugins_css = [\u0026quot;custom\u0026quot;] plugins_js = [\u0026quot;custom\u0026quot;]  People Widget The People widget helps an organization to easily introduce their staff. It may be of particular interest to academic research groups.\nTo display the People widget,\n For each user that you wish to show in the People widget, add the authors and user_groups settings to their account as per the the demo user account Download the People widget to your content/home/ folder if it doesn\u0026rsquo;t already exist Activate the People widget at content/home/people.md by setting active = true in its front matter Edit the People widget\u0026rsquo;s user_groups to determine which user groups to display  Please report any feedback in the discussion thread.\nDates Improved display of dates in talks and publications (#891)\n In v3 of Academic, the publish date for every page was displayed at the top in the page metadata. This meant that dates could be displayed twice on talk and publication pages, which already had separate date fields For publications, we have formatted the date in the metadata according to publication date format parameter (in params.toml) and removed the second date that was shown For talks, we have removed the date that the page was published as this may be confused with the talk date  Day and Night Mode When toggling between day and night mode using the sun/moon icon in the navigation bar, any code blocks on your site will also now have the corresponding day or night theme applied to them.\nStyling widgets It\u0026rsquo;s possible to customize the style of a specific instance of a widget. For example, the background of a widget may be changed to an image or color gradient.\nFirst, define your custom style in CSS using the CSS Plugin feature.\nTo apply your new style to a widget, set css_class in a widget\u0026rsquo;s front matter. For example css_class = \u0026quot;MY_CSS_CLASS\u0026quot;, where MY_CSS_CLASS is the name of the CSS class which you defined in the previous step.\nThank you Last but certainly not least, a big Thank You to all the folks that helped to make Academic even better.\nHas Academic helped you? Please consider supporting Academic.\n","date":1547913600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1547913600,"objectID":"bfd9c9777d4780cc2237ad91efc00597","permalink":"https://blog.codist.me/en/updates/v4.0.0/","publishdate":"2019-01-20T00:00:00+08:00","relpermalink":"/en/updates/v4.0.0/","section":"updates","summary":"Release Notes tell you what\u0026rsquo;s new in Academic. As always, we welcome your feedback. You can also file a bug report. Want to update to this version? Refer to the update guide in conjunction with the parameter changes mentioned in the Breaking Changes section below.\nSee what\u0026rsquo;s new in Academic! Welcome to the v4 release of Academic. This version is all about people! There are a number of exciting updates in this version that we hope you will like, including:","tags":null,"title":"Version 4 (February 2019)","type":"updates"},{"authors":null,"categories":null,"content":" Release Notes tell you what\u0026rsquo;s new in Academic. As always, we welcome your feedback. You can also file a bug report. Want to update to this version? Refer to the update guide in conjunction with the parameter changes mentioned in the Breaking Changes section below.\nSee what\u0026rsquo;s new in Academic! Welcome to the v3.3.0 release of Academic. There are a number of exciting updates in this version that we hope you will like, including:\n New widget for Accomplishments: list your accomplishments including certificates and courses attended Filter the Post widget by a tag or category:  Enables creating an instance of the Post widget for each of your main tags or categories Clicking on the \u0026ldquo;More Posts\u0026rdquo; link will take the user to the corresponding tag or category archive page (if enabled)  Appointment booking supported in the Contact widget  Simply register with an appropriate service such as Calendly and enter the provided URL in the new appointment_url field in your config    List your accomplishments including certificates and courses attended.   Breaking changes Here are some considerations to make when updating Academic from the previous version, v3.2.0:\n View changes to config.toml - scroll down to the changes for the exampleSite/config.toml file Replace any instances of \\n with \\\\ in any multiline fields such as the address and office_hours fields in config.toml  Note that there is a bug in Hugo v0.53+ affecting \\\\ linebreaks; a workaround is to either downgrade Hugo to v0.50 or replace \\\\ with \u0026lt;br\u0026gt;  Upgrade the front matter of the Posts widget  See the changes Remove tags_include and tags_exclude from home/posts.md Add filter_tag and filter_category to home/posts.md  Save the Accomplishments widget to home/accomplishments.md if you would like to use it to list your accomplishments  Other  Updated FontAwesome icons from v5.4.1 to v5.6.0 - includes their new Winter icon packs  Thank you Last but certainly not least, a big Thank You to all the folks that helped to make Academic even better.\nHas Academic helped you? Consider supporting Academic.\n","date":1546185600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1546185600,"objectID":"977d84f17ccb0becf83e8d8e36da726e","permalink":"https://blog.codist.me/en/updates/v3.3.0/","publishdate":"2018-12-31T00:00:00+08:00","relpermalink":"/en/updates/v3.3.0/","section":"updates","summary":"Release Notes tell you what\u0026rsquo;s new in Academic. As always, we welcome your feedback. You can also file a bug report. Want to update to this version? Refer to the update guide in conjunction with the parameter changes mentioned in the Breaking Changes section below.\nSee what\u0026rsquo;s new in Academic! Welcome to the v3.3.0 release of Academic. There are a number of exciting updates in this version that we hope you will like, including:","tags":null,"title":"Version 3.3 (December 2018)","type":"updates"},{"authors":null,"categories":null,"content":" Release Notes tell you what\u0026rsquo;s new in Academic. As always, we welcome your feedback. You can also file a bug report. Want to update to this version? Refer to the update guide in conjunction with the parameter changes mentioned in the Breaking Changes section below.\nSee what\u0026rsquo;s new in Academic! Welcome to the December 2018 release of Academic. There are a number of exciting updates in this version that we hope you will like, including:\n Redesign of search feature: search from the navigation bar or with keyboard shortcuts:  Press / to toggle the search dialog and press ESC to close  New day and night modes: enable users to switch between day (light) and night (dark) variations of your theme Fix projects not listing child pages when serving a site on Windows   Check out the newly redesigned search, enabling users to easily search from the navbar, and the new user-choosable day/night theme variations.   Also, the Academic ecosystem has grown to include the following projects:\n Academic Admin: An admin tool to import publications from BibTeX or import assets for an offline site Academic Scripts: Scripts to help migrate content to new versions of Academic Project KickstartR: Create a Project, Team, or Conference Landing Page and Knowledge Sharing Platform with \u0026reg; Markdown  Breaking changes Here are some considerations to make when updating Academic from the previous version, v3.1.1:\n View changes to config.toml - scroll down to the changes for the exampleSite/config.toml file Search widget is deprecated and content/home/search.md should be removed url_project can now only be used to link pages to external websites. To link a page to a project page, use projects option.\n  Multilingual  Fix Hero widget and search index for multilingual sites (#820)  Enables searching for content in the current language   Other  Fix Twitter sharing (#813)  Use small Twitter card for small images Consider featured image and avatar image when computing optimal image to use in Twitter card  Refactor JS: shorten MathJax filename and minify + fingerprint assets (#768)  Remove fingerprinting from MathJax config JS to shorten its generated filename. Reduces chance of JS filenames becoming too long for user\u0026rsquo;s OS to handle due to long Sha512 asset fingerprinting. Minifies and fingerprints Academic\u0026rsquo;s own JS for faster loading and to prevent old versions getting cached by web browser Refactors Algolia search JS into its own file   Thank you Last but certainly not least, a big Thank You to all the folks that helped to make Academic even better.\nHas Academic helped you? Consider supporting Academic.\n","date":1543680000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1543680000,"objectID":"d63c21173fa1d2c021431b55796e1d2a","permalink":"https://blog.codist.me/en/updates/v3.2.0/","publishdate":"2018-12-02T00:00:00+08:00","relpermalink":"/en/updates/v3.2.0/","section":"updates","summary":"Release Notes tell you what\u0026rsquo;s new in Academic. As always, we welcome your feedback. You can also file a bug report. Want to update to this version? Refer to the update guide in conjunction with the parameter changes mentioned in the Breaking Changes section below.\nSee what\u0026rsquo;s new in Academic! Welcome to the December 2018 release of Academic. There are a number of exciting updates in this version that we hope you will like, including:","tags":null,"title":"Version 3.2 (December 2018)","type":"updates"},{"authors":null,"categories":null,"content":" Release Notes tell you what\u0026rsquo;s new in Academic. As always, we welcome your feedback. You can also file a bug report. Want to update to this version? Refer to the update guide in conjunction with the parameter changes mentioned in the Breaking Changes section below.\nSee what\u0026rsquo;s new in Academic! Welcome to the November 2018 release of Academic. There are a number of exciting updates in this version that we hope you will like, including:\n New project showcase layout to showcase large images in the project widget, as seen in the screenshot below  In home/projects.md, set view = 2 to use  Easily create image galleries by adding images to an album folder within a page bundle Featured images can now optionally be restricted to page previews only Support for custom link buttons with icons on any page  For example, link your project to social media pages  Use the email icon in the About widget to link to the contact form  Just set link = \u0026quot;#contact\u0026quot; (substituting contact with the filename of your contact widget) under [[params.social]] in config.toml  Posts can now be associated with projects and listed on the project page  To associate a post, add projects = [\u0026quot;my-project-name\u0026quot;] to its front matter  YAML front matter is now supported for talks   Showcase your projects with the new showcase layout for the project widget.   Breaking changes Here are some considerations to make when updating Academic from the previous version, v3.0.0:\n Requires Hugo v0.50+ View changes to config.toml - scroll down to the changes for the exampleSite/config.toml file CSS class names of project tags in the project widget are now prefixed with js-id- to namespace them and prevent clashes with existing CSS classes. Migrate any old filter tags in projects.md that are prefixed with a . to the new .js-id- prefix. Tags which are not prefixed with a . do not need migrating.   Widgets  Project Widget: add project showcase layout, set view = 2 in projects.md to use Project Widget: revert card view to use resized images rather than cropped images Project Widget: fix project filters for tags with non-ASCII (i18n) characters Project Widget: add single column wide layout for project widget, to use set widget_layout in projects.md Project Widget: add flip_alt_rows widget option to flip alternate rows in showcase mode About Widget: support [[params.social]] links to homepage sections  Enables using the email icon in the About widget to link to the contact form  Contact Widget: do not require email if using Netlify contact form Experience Widget: respect the date_format option for experience widget   Content pages  url_ link buttons can now be added for projects all link buttons now appear in page header rather than under a \u0026lsquo;links\u0026rsquo; section within the page feat: Add support for icons in url_custom - docs Markdown slides can now be linked from any page by using new slides option feat(project): list associated posts feat(talk): support YAML front matter for talks feat(page): re-apply markdownify on author names  Shortcodes  feat(shortcodes): add support for image gallery in page bundle  Thank you Last but certainly not least, a big Thank You to all the folks that helped to make Academic even better.\nHas Academic helped you? Consider supporting Academic.\n","date":1541260800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1541260800,"objectID":"467b9417ad102640ca987e017fe10d7f","permalink":"https://blog.codist.me/en/updates/v3.1.0/","publishdate":"2018-11-04T00:00:00+08:00","relpermalink":"/en/updates/v3.1.0/","section":"updates","summary":"Release Notes tell you what\u0026rsquo;s new in Academic. As always, we welcome your feedback. You can also file a bug report. Want to update to this version? Refer to the update guide in conjunction with the parameter changes mentioned in the Breaking Changes section below.\nSee what\u0026rsquo;s new in Academic! Welcome to the November 2018 release of Academic. There are a number of exciting updates in this version that we hope you will like, including:","tags":null,"title":"Version 3.1 (November 2018)","type":"updates"},{"authors":null,"categories":null,"content":" Release Notes tell you what\u0026rsquo;s new in Academic. As always, we welcome your feedback. You can also file a bug report. Want to update to this version? Refer to the update guide in conjunction with the parameter changes mentioned in the Breaking Changes section below.\nSee what\u0026rsquo;s new in Academic! Welcome to the October 2018 release of Academic. This month, we celebrate the massive milestone release of version 3 which brings many new exciting features and improvements to Academic, including:\n New Academic Admin tool to automatically import publications from the open BibTeX format or import third-party assets to generate an offline site - star Academic Admin on GitHub New 3-in-1 slides feature - View Slides Demo  Slides can be created very efficiently using Markdown, presented to your audience, and shared on your site. Speaker notes included!  New docs layout for online courses, tutorials, software documentation, and knowledge bases etc.  This website is using the new docs layout for the purpose of documenting Academic  New experience widget - showcase your professional experience New responsive featured image system with automatic resizing - simply drag an image named featured.* to a page\u0026rsquo;s own folder to add a featured image to a page New streaming layout for widgets - display a brief summary and thumbnail of each item New Apogee and Cupcake themes (see below) Show an author profile at the bottom of page content such as posts Foundational multi-user support to enable adding multiple authors to pages Ability to display a contact form in the contact widget Migration to Hugo\u0026rsquo;s new page bundles - each page gets its own folder where assets can be easily drag-and-dropped  Use this tool to help automatically migrate your pages to page bundles  Migration from Font Awesome v4 to v5 - many new icons can now be used for linking to social networks etc. Migration from Bootstrap v3 to v4 - mobile-first approach with greatly improved page responsiveness across devices  resize your browser window whilst viewing the demo pages to see how pages are optimized for each device\u0026rsquo;s screen size   Apogee theme\n Cupcake theme\n  Breaking changes Here are some considerations to make when updating Academic from the previous version, v2.4.0:\n Require Hugo v0.49+ View config changes in config.toml - scroll down to the changes for the exampleSite/config.toml file  apply the config changes to your site\u0026rsquo;s config.toml (except for customizations such as the demo\u0026rsquo;s [[menu.main]] menu)  Migrate icon pack names and icon names to Font Awesome v5 (for brands, use fab icon pack, otherwise fas icon pack for general icons)  Update icons in your [[social]] instances in config.toml  The image = \u0026quot;\u0026quot; and image_preview = \u0026quot;\u0026quot; parameters have been deprecated and should be removed from page front matter (these were mainly used in publication front matter).  If they exist in your site and are not removed, an error may be displayed referencing \u0026lt;$page.Params.image.f...\u0026gt;  Refactor a page named X.md to content/\u0026lt;section\u0026gt;/X/index.md to use the new page bundles and featured image system  E.g. a post content/post/X.md is converted to content/post/X/index.md  Talks and publications: internal url_* links are now relative to their directory (such as their page bundle)  If you have url_* links pointing to internal resources on your site, their path may need adjusting to be relative to their directory rather than relative to the website root    Content pages  Automatic generation of cite and PDF links: drag and drop a *.bib and a PDF named after your publication\u0026rsquo;s own folder (page bundle) to your publication\u0026rsquo;s own folder New docs layout for online courses, tutorials, software documentation, and knowledge bases etc.  This website is using the new docs layout for the purpose of documenting Academic  Multi-user support  Ability to add multiple authors for blog posts\n  Publication: Add optional DOI link using new doi option Talks and publications: make internal url_ links relative to their page bundle The following boolean (true/false) options can be added in the front matter of pages to control page features:  share comments reading_time profile   Themes  New Apogee and Cupcake themes Accessibility: Increase contrast  Widgets  New experience widget - showcase your professional experience add optional contact form to contact widget  to use, update, copy the new contact widget from themes/academic/exampleSite/content/home/contact.md and set the email form provider in its front matter  featurette widget: Add support for title and subtitle project widget: Fix filter for case where tag is not CSS class name about widget: Fix avatar not showing in some cases project widget: Make filter toolbar responsive when large number of buttons  Shortcodes  Update figure and video to support files within page dir  To reference file in page folder, simply use {{\u0026lt; figure src=\u0026quot;a.png\u0026quot; \u0026gt;}} To reference file from static/img/ media library, set library=1 in shortcode. E.g. {{\u0026lt; figure src=\u0026quot;a.png\u0026quot; library=1 \u0026gt;}}    Language packs  Add Japanese translation (#654) Add Catalan translation (#676) Update Chinese translation (#717) Update Italian translation (#685) Add missing German translations (#739)  Other  Config: support custom site description and thumbnail image for SEO and sharing on social networks Refactor most absolute URLs to relative URLs posts: Make using content template (e.g. hugo new) optional Fix Google Fonts URL (fix encoding and its HTML attribute) Accessibility: Add alt tag to avatar image  Thank you Last but certainly not least, a big Thank You to all the folks that helped to make Academic even better.\nHas Academic helped you? Consider supporting Academic.\n","date":1540051200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1540051200,"objectID":"d3ba5f047a380a2ddf7c0b1795c3c65f","permalink":"https://blog.codist.me/en/updates/v3.0.0/","publishdate":"2018-10-21T00:00:00+08:00","relpermalink":"/en/updates/v3.0.0/","section":"updates","summary":"Release Notes tell you what\u0026rsquo;s new in Academic. As always, we welcome your feedback. You can also file a bug report. Want to update to this version? Refer to the update guide in conjunction with the parameter changes mentioned in the Breaking Changes section below.\nSee what\u0026rsquo;s new in Academic! Welcome to the October 2018 release of Academic. This month, we celebrate the massive milestone release of version 3 which brings many new exciting features and improvements to Academic, including:","tags":null,"title":"Version 3 (October 2018)","type":"updates"},{"authors":null,"categories":null,"content":" Release Notes tell you what\u0026rsquo;s new in Academic. As always, we welcome your feedback. You can also file a bug report. Want to update to this version? Refer to the update guide in conjunction with the parameter changes mentioned in the Breaking Changes section below.\nSee what\u0026rsquo;s new in Academic! Welcome to the second August 2018 release of Academic. There are a number of updates in this version that we hope you will like, including:\n New Search engine New Carousel widget (#622) Support for Hugo v0.45+  Breaking changes Here are some considerations to make when updating Academic from the previous version, v2.3.0:\n View changes to config.toml - scroll down to the changes for the exampleSite/config.toml file Download search.md to your content/home/search.md if you wish to enable the new search feature disable_sri parameter has been deprecated Setting highlight_languages is now only supported in config.toml and not on a per page basis  Content Pages  Allow a summary to be specified for widget pages (except for the home page which uses the role parameter) (#611)  Enable summary = \u0026quot;your page summary\u0026quot; to be set in a widget page\u0026rsquo;s _index.md.\n This metadata will then be used to enrich SEO, social sharing, and Academic\u0026rsquo;s search engine.  Add support for tags containing spaces Fix tag colors when using the dark theme Fix case of highlight style not loading, causing code syntax to be incorrectly highlighted (#614)  Plugins  Add Search widget Add Carousel widget (#622) About widget: Fix avatar sometimes not showing in Hugo v0.45+ Talk widget: Add exclude_selected option to front matter of talks widget to hide selected talks (#623)  Useful if you are using both the selected talks widget and the recent talks widget   Packaging  Attempt to load local copy of third party JS/CSS assets if available (#489)  Allows to create an entirely offline site To use, concatenate vendor JS to static/js/vendor/main.min.js, concatenate vendor CSS to static/css/vendor/main.min.css, and add fonts to static/fonts/  Theme version is now stored at themes/academic/data/academic.toml for those who do not use Git to track Academic\u0026rsquo;s version - this is useful when updating the theme disable_sri parameter has been deprecated  Other  Fix example site (deleted content/tag/ folder which was causing Hugo to exit with an error) Metadata: If set, use the summary parameter in content front matter for the description when a user shares a page on social media Setting highlight_languages is now only supported in config.toml and not on a per page basis Exclude all widgets from the sitemap, including those on widget pages other than the home page (#613) Add support for Hugo v0.45  Thank you Last but certainly not least, a big Thank You to all the folks that helped to make Academic even better.\n","date":1534003200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1534003200,"objectID":"a13961c8766bfc827fa7d50b1a7b2619","permalink":"https://blog.codist.me/en/updates/v2.4.0/","publishdate":"2018-08-12T00:00:00+08:00","relpermalink":"/en/updates/v2.4.0/","section":"updates","summary":"Release Notes tell you what\u0026rsquo;s new in Academic. As always, we welcome your feedback. You can also file a bug report. Want to update to this version? Refer to the update guide in conjunction with the parameter changes mentioned in the Breaking Changes section below.\nSee what\u0026rsquo;s new in Academic! Welcome to the second August 2018 release of Academic. There are a number of updates in this version that we hope you will like, including:","tags":null,"title":"Version 2.4 (August 2018)","type":"updates"},{"authors":null,"categories":null,"content":" Release Notes tell you what\u0026rsquo;s new in Academic. As always, we welcome your feedback. You can also file a bug report. Want to update to this version? Refer to the update guide in conjunction with the parameter changes mentioned in the Breaking Changes section below.\nSee what\u0026rsquo;s new in Academic! Welcome to the July 2018 release of Academic. There are a number of updates in this version that we hope you will like, including:\n Option to display author names in blog posts Google Docs shortcode now works with all types of document (Slides, Sheets, Docs, etc.) New list_tags and list_categories shortcodes to list links to all tags and categories Automatically link to your privacy policy in page footer and from the cookie consent \u0026ldquo;learn more\u0026rdquo;  Breaking changes Here are some considerations to make when updating Academic from the previous version, v2.2.0:\n View changes to config.toml - scroll down to the changes for the exampleSite/config.toml file Hugo v0.38+ required Google Docs shortcode now requires src attribute - details below   Content pages  posts: Add option to display author names  To enable, add authors = [\u0026quot;Me\u0026quot;, \u0026quot;You\u0026quot;] to the post front matter  projects: Fix list of talks List all projects at /project/ URL (mainly for SEO) Change style of tags to avoid confusion between tags and link buttons  Plugins  Google Docs shortcode now supports all doc types (Slides, Docs, Sheets, etc.)  Shortcode syntax changed to: {{\u0026lt; gdocs src=\u0026ldquo;https://\u0026hellip;\u0026rdquo; \u0026gt;}} The new src attribute should point to the Google Docs embed URL rather than link URL (see updated documentation)  New list_tags and list_categories shortcodes  Use {{\u0026lt; list_tags \u0026gt;}} to provide a list of linked tags. Use {{\u0026lt; list_categories \u0026gt;}} to provide a list of linked categories.   Other  privacy: Automatically link to your privacy policy in page footer and from the cookie consent \u0026ldquo;learn more\u0026rdquo;  To enable, create a privacy policy at content/privacy.md using the template  mathjax: Improve handling of long equations (automatic linebreaks) Change talk icon from comment-o to calendar Disable Google Analytics in development mode (if activated) Improve metadata for SEO  Thank you Last but certainly not least, a big Thank You to all the folks that helped to make Academic even better.\n","date":1531584000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1531584000,"objectID":"ab8d65610cf06c9a563784165684a9da","permalink":"https://blog.codist.me/en/updates/v2.3.0/","publishdate":"2018-07-15T00:00:00+08:00","relpermalink":"/en/updates/v2.3.0/","section":"updates","summary":"Release Notes tell you what\u0026rsquo;s new in Academic. As always, we welcome your feedback. You can also file a bug report. Want to update to this version? Refer to the update guide in conjunction with the parameter changes mentioned in the Breaking Changes section below.\nSee what\u0026rsquo;s new in Academic! Welcome to the July 2018 release of Academic. There are a number of updates in this version that we hope you will like, including:","tags":null,"title":"Version 2.3 (July 2018)","type":"updates"},{"authors":null,"categories":null,"content":" Release Notes tell you what\u0026rsquo;s new in Academic. As always, we welcome your feedback. You can also file a bug report. Want to update to this version? Refer to the update guide in conjunction with the parameter changes mentioned in the Breaking Changes section below.\nSee what\u0026rsquo;s new in Academic! Welcome to the May 2018 release of Academic. There are a number of updates in this version that we hope you will like, including:\n New card style for detailed list views Add optional simple listing format for the Post Widget which only displays post titles New shortcodes for displaying videos, highlighting quotes, and embedding Google Docs (e.g. slides) Support external header images - for example, the ability to provide an image URL as a featured image Add optional Privacy Pack to enhance privacy such as by displaying a cookie consent message and anonymizing IPs for Google Analytics Added Bahasa Indonesia and Greek translations  Breaking changes Here are some considerations to make when updating Academic from the previous version, v2.1.0:\n View changes to config.toml - scroll down to the changes for the exampleSite/config.toml file Figures are now unnumbered by default New entries added to language packs   Content pages  Apply card style to detailed list views Support external header images - for example, the ability to provide an image URL (#461, #488) Projects: fix project links for multilingual sites (#442) Publications: make title width consistent with other pages (#372)  Themes  dark theme: Add support for MathJax zoom  Plugins  Add Google Docs shortcode figure shortcode: Support i18n and unnumbered captions  Figures are now unnumbered by default To number a figure, use the form: {{\u0026lt; figure src=\u0026quot;image.jpg\u0026quot; title=\u0026quot;Caption\u0026quot; numbered=\u0026quot;true\u0026quot; \u0026gt;}} Add i18n translation for \u0026ldquo;Figure\u0026rdquo; in captions  post widget: Add optional simple listing format to only display post titles  To use, set list_format = 0 in posts.md widget  Add hl shortcode for highlighting key phrases  E.g. {{\u0026lt; hl \u0026gt;}}highlighted quote{{\u0026lt; /hl \u0026gt;}}  Add video file shortcode Remove image shadow from image shortcode About Widget: center multi-line social icons  Localization  Add Greek and Bahasa Indonesia translations Update English, Chinese, French, Spanish, and Vietnamese translations  Other  Add Privacy Pack  To enable, set privacy_pack = true in config.toml Shows a cookie consent message to visitors Anonymizes IP in Google Analytics (if enabled)  Prevent wrapping in code blocks List most recent content on 404 error page Wrap long words in headings to prevent overlapping content Add support for uglyURLs = true  Thank you Last but certainly not least, a big Thank You to all the folks that helped to make Academic even better.\n","date":1525104000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1525104000,"objectID":"10f6f014951f50b82347e5bdfe884db5","permalink":"https://blog.codist.me/en/updates/v2.2.0/","publishdate":"2018-05-01T00:00:00+08:00","relpermalink":"/en/updates/v2.2.0/","section":"updates","summary":"Release Notes tell you what\u0026rsquo;s new in Academic. As always, we welcome your feedback. You can also file a bug report. Want to update to this version? Refer to the update guide in conjunction with the parameter changes mentioned in the Breaking Changes section below.\nSee what\u0026rsquo;s new in Academic! Welcome to the May 2018 release of Academic. There are a number of updates in this version that we hope you will like, including:","tags":null,"title":"Version 2.2 (May 2018)","type":"updates"},{"authors":null,"categories":null,"content":" The following color themes are available and can be set by the color_theme option in config/_default/params.toml:\n          User Themes In this section, we will curate themes submitted by users. To create your own theme and request it to be added to this section, follow these steps:\n Follow the guide to create a new theme Upload your theme file to a new Github repository Open a ticket with a link to your theme\u0026rsquo;s Github repository and a screenshot  ","date":1510761600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1510761600,"objectID":"1093b6bde036f76f5e2a6fa578b9a639","permalink":"https://blog.codist.me/en/themes/","publishdate":"2017-11-16T00:00:00+08:00","relpermalink":"/en/themes/","section":"","summary":"Color themes for Academic.\n","tags":null,"title":"Themes","type":"page"},{"authors":null,"categories":null,"content":" Release Notes tell you what\u0026rsquo;s new in Academic. As always, we welcome your feedback. You can also file a bug report. Want to update to this version? Refer to the update guide in conjunction with the parameter changes mentioned in the Breaking Changes section below.\nSee what\u0026rsquo;s new in Academic! Welcome to the January 2018 release of Academic. There are a number of updates in this version that we hope you will like, including:\n Add dark and 1950s themes (see preview below) Add gallery and featurette plugins Enable your site to be installed to the home screen of a mobile device, providing users with quicker access and a richer experience  For example, if viewing this site in Chrome for Android on a mobile device, press the Chrome settings icon in the top right corner, press Add to home screen - a native-like app for the website will be installed to your home screen. A similar process can be followed for other mobile browsers such as Firefox Mobile.  Enable modern web browsers to automatically load localized version of content in multilingual sites Add OpenStreetMap-based alternative to Google Maps (#360) Display any tags at the bottom of all content pages (not only for blog posts!) Re-enable RSS output by default (can be disabled in config)  Dark theme\n 1950s theme\n  Breaking changes Here are some considerations to make when updating Academic from the previous version, v2:\n View changes to config.toml - scroll down to the changes for the exampleSite/config.toml file Add exclude_selected = false option to front matter of publication widget (content/home/publications.md)   Content pages  Display tags (if set) for all content types (not only for blog posts!) Publication: Make abstract and publication name optional  More convenient for adding preprints and reports  Publication archive: Fix error when no publications exist Publication: Fix bold font not being applied to metadata row headings Talk: Sort and group talks by time_start instead of date published Talk: Add option to hide/show talk time Talk: Add time_format variable for customizing talk time  Themes  Add dark theme Add 1950s theme Add support for Chrome theme color  Plugins  Add gallery shortcode - see documentation Add featurette widget - see example use Publication widget: Add option to exclude selected publications  Add exclude_selected = true option to front matter of publication widget.  About widget:  Add OpenStreetMap-based alternative to Google Maps (#360) Add support for linking to forum/chat/mailing-list  Project widget: Enable content from any folder to be displayed  The widget is no longer limited to only displaying content from content/project/ folder Use folder = \u0026quot;project\u0026quot; in widget front matter to set folder to use  Project widget: Fix project filter buttons (#362)  Localization  Enable modern web browsers to automatically load localized version of content in multilingual sites Fix styles.css link when defaultContentLanguageInSubdir = true Fix Spanish typos Add missing phrases to Polish translation  Other  Enable your site to be installed to the home screen of a mobile device, providing users with quicker access and a richer experience Re-enable RSS output by default (can be disabled in config) Improve SEO by metadata improvements Add Twitter card and Open Graph metadata Enable main menu to optionally be left aligned (see Breaking Changes section above) navbar: Open external menu links in new tab navbar: Fix error when menu URL shorter than 4 characters is set Update style of next/prev section pager  Thank you Last but certainly not least, a big Thank You to all the folks that helped to make Academic even better.\n","date":1508947200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1515772800,"objectID":"dc5a38b80fb5e91ab986793315c72f88","permalink":"https://blog.codist.me/en/updates/v2.1.0/","publishdate":"2017-10-26T00:00:00+08:00","relpermalink":"/en/updates/v2.1.0/","section":"updates","summary":"Release Notes tell you what\u0026rsquo;s new in Academic. As always, we welcome your feedback. You can also file a bug report. Want to update to this version? Refer to the update guide in conjunction with the parameter changes mentioned in the Breaking Changes section below.\nSee what\u0026rsquo;s new in Academic! Welcome to the January 2018 release of Academic. There are a number of updates in this version that we hope you will like, including:","tags":null,"title":"Version 2.1 (January 2018)","type":"updates"},{"authors":null,"categories":null,"content":" Release Notes tell you what\u0026rsquo;s new in Academic. As always, we welcome your feedback. You can also file a bug report. Want to update to this version? Refer to the update guide in conjunction with the parameter changes mentioned in the Breaking Changes section below.\nSee what\u0026rsquo;s new in Academic! Welcome to the October 2017 release of Academic. There are a number of significant updates in this version that we hope you will like, including:\n New theme system (with 4 color themes and 3 font styles to choose from) New widget page system - create similar pages to the homepage New APA and MLA citation styles Enable users to copy or download citations Projects widget is now reusable and the default filter can be changed New Tag Cloud and Hero widgets for you to use on the homepage or widget pages New shortcode to generate table of contents for posts Support for Google Maps in Contact Widget Listings are displayed consistently across homepage and archive pages Posts and Publications widgets have improved filtering options, enabling creation of multiple widget instances which are filtered on different content types project page: List associated talks and publications talks: Add start and end times     default ocean             forest coffee          Breaking changes Here are some considerations to make when updating Academic from the previous version, v0.29.0:\n Requires Hugo 0.30.2+ View config.toml changes Changes to parameters in widgets and content frontmatter - refer to [Breaking Change] notices in the following section below. If any errors arise, we recommend comparing the frontmatter of the updated example site content with the frontmatter parameters in your content files. Translations: if you are using a non-English or customized language file, the relevant translation in themes/academic/i18n/ may require updating based on the changes to the English language file. English, Chinese, French, and Spanish appear to be up-to-date. If your publication and talk abstracts contain math, they may require further escaping to prevent them being parsed as Markdown  In this update General\n Add theme system - easily customize your site\u0026rsquo;s color theme and font style!  Add 4 themes Add 3 font styles  Add widget page system (create similar pages to the homepage) config: Add option to display logo instead of title in nav bar (#214)  Add logo = \u0026quot;\u0026quot; to [params] config   Content\nIntroducing the Cite feature:  Introducing the Cite feature. Enable users to copy and download your Bibtex citations.  \n Add citation system - users can copy or download Bibtex citations  A \u0026lsquo;Cite\u0026rsquo; button will be automatically generated when a Bibtex file, such as my-paper.bib, is placed in static/files/citations/ folder. Note that the Bibtex filename should match the name of your publication Markdown file in content/publication/, such that you may have content/publication/**my-paper**.md and static/files/citations/**my-paper**.bib. Refer to the latest demo and example site code for an example.  Posts: Show related content (Refer to https://gohugo.io/content-management/related/) Publications: Support APA and MLA citation formats (#235 #305)  [BREAKING CHANGE]: boolean detailed_list has changed to integer list_format parameter in pub. widgets and pub. _index.md archive list_format has following options: 0 = Simple, 1 = Detailed, 2 = APA, 3 = MLA  Publication archive: Add filter for year (Close #171) Posts: Add estimated reading time to post metadata\n To disable, set reading_time = false under [params] config  Posts: Support lastmod param to show date last modified, e.g. lastmod = 2017-09-25 Posts: Option to show comment count and other improvements  add comment_count = true to [params] config add section_pager = false to [params] config to disable pager by default move tags from post metadata bar to post footer  Publications: display listings consistently across both publication widgets and publication archive Publications: optional buttons added for preprint (url_preprint), poster (url_poster), source document (url_source), and cite (see citation feature above) Posts: display listings consistently across both post widget and post archive Talks: display listings consistently across both talk widget and talk archive  talk widget: Change detailed_list = false option to list_format = 0 [BREAKING CHANGE]  Talk detail page: Show start time and add date_end option for showing end time and duration of talk/event Both Talk and Publication abstracts are now parsed for Markdown  Widgets\nIntroducing the Hero widget:  Introducing the Hero widget. Choose your background and then add a title, subtitle, and optional call-to-action button.  \n about widget: Allow for multiple organizations  Add organizations = [ {name=\u0026quot;Org Name\u0026quot;, url=\u0026quot;\u0026quot;} ] to [params] config Remove organization and organization_url options from config (although they remain supported) Only show role if it is set  Add Hero widget Publication widget: Add filter for publication type  Add publication_type = \u0026quot;-1\u0026quot; option to home/publications.md and home/publications_selected.md  Add tag cloud widget - you may add the tag cloud widget to your content/home/ folder Posts widget: Add filter to exclude tags  Change tags option to tags_include [BREAKING CHANGE] Add tags_exclude option  widgets: Add active option to activate/deactivate widgets Project widget: Make widget reusable (multiple widget instances now possible) Project widget: Enable changing default filter (#88)  Use filter_default = 0 to specify index of default filter  Support for Google Maps in Contact Widget. About widget: Add work around to prevent uBlock browser plugin blocking social network icons Project widget: Fix items occasionally overlapping when in list view (Fix #71) Markdownify the interests list and talk abstracts, and support multiline address formatting  Shortcodes\n Add shortcode for generating table of contents Add staticref shortcode for linking files (#236)  Translations\n Add Korean translation (#257) Update English, Chinese, French, and Spanish translations  Other\n Improve 404 error page (#332)  Add page translation  Improve versioning and SRI for JS and CSS dependencies  Parameterize JS and CSS versions in data/sri.toml (no longer hardcoded) Highlight.js version moved from config.toml to data/sri.toml   Thank you Last but certainly not least, a big Thank You to all the folks that helped to make Academic even better.\n","date":1506268800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1508601600,"objectID":"b39dca05c36ff9bd34c78fde29c24a0f","permalink":"https://blog.codist.me/en/updates/v2.0.0/","publishdate":"2017-09-25T00:00:00+08:00","relpermalink":"/en/updates/v2.0.0/","section":"updates","summary":"Release Notes tell you what\u0026rsquo;s new in Academic. As always, we welcome your feedback. You can also file a bug report. Want to update to this version? Refer to the update guide in conjunction with the parameter changes mentioned in the Breaking Changes section below.\nSee what\u0026rsquo;s new in Academic! Welcome to the October 2017 release of Academic. There are a number of significant updates in this version that we hope you will like, including:","tags":null,"title":"Version 2 (22 October 2017)","type":"updates"},{"authors":null,"categories":null,"content":" Release Notes tell you what\u0026rsquo;s new in Academic. As always, we welcome your feedback. You can also file a bug report. Want to update to this version? Refer to the update guide.\nSee what\u0026rsquo;s new in Academic! Unfortunately, release notes are unavailable for this release. Please refer to the commit log for a full list of changes.\n","date":1506182400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1506182400,"objectID":"e35addad48603ad8eb7387b6fb327b9d","permalink":"https://blog.codist.me/en/updates/v0.29.0/","publishdate":"2017-09-24T00:00:00+08:00","relpermalink":"/en/updates/v0.29.0/","section":"updates","summary":"Release Notes tell you what\u0026rsquo;s new in Academic. As always, we welcome your feedback. You can also file a bug report. Want to update to this version? Refer to the update guide.\nSee what\u0026rsquo;s new in Academic! Unfortunately, release notes are unavailable for this release. Please refer to the commit log for a full list of changes.","tags":null,"title":"Version 0.29.0 (30 August 2017)","type":"updates"},{"authors":null,"categories":null,"content":"","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"d1311ddf745551c9e117aa4bb7e28516","permalink":"https://blog.codist.me/en/project/external-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/en/project/external-project/","section":"project","summary":"An example of linking directly to an external project website using `external_link`.","tags":["Demo"],"title":"External Project","type":"project"},{"authors":null,"categories":null,"content":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.\nNullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.\nCras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.\nSuspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.\nAliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.\n","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"8f66d660a9a2edc2d08e68cc30f701f7","permalink":"https://blog.codist.me/en/project/internal-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/en/project/internal-project/","section":"project","summary":"An example of using the in-built project page.","tags":["Deep Learning"],"title":"Internal Project","type":"project"},{"authors":["Nelson Bighetti"],"categories":[],"content":" Create a free website with Academic using Markdown, Jupyter, or RStudio. Choose a beautiful color theme and build anything with the Page Builder - over 40 widgets, themes, and language packs included!\nCheck out the latest demo of what you\u0026rsquo;ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\n Setup Academic Get Started View the documentation Ask a question Request a feature or report a bug Updating? View the Update Guide and Release Notes Support development of Academic:  Donate a coffee Become a backer on Patreon Decorate your laptop or journal with an Academic sticker Wear the T-shirt   \nKey features:\n Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 15+ language packs including English, 中文, and Português Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files.  Color Themes Academic comes with day (light) and night (dark) mode built-in. Click the sun/moon icon in the top right of the Demo to see it in action!\nChoose a stunning color and font theme for your site. Themes are fully customizable and include:\n         Ecosystem  Academic Admin: An admin tool to import publications from BibTeX or import assets for an offline site Academic Scripts: Scripts to help migrate content to new versions of Academic  Install You can choose from one of the following four methods to install:\n one-click install using your web browser (recommended) install on your computer using Git with the Command Prompt/Terminal app install on your computer by downloading the ZIP files install on your computer with RStudio  Then personalize and deploy your new site.\nUpdating View the Update Guide.\nFeel free to star the project on Github to help keep track of updates.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1461110400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555459200,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://blog.codist.me/en/post/getting-started/","publishdate":"2016-04-20T00:00:00Z","relpermalink":"/en/post/getting-started/","section":"post","summary":"Create a beautifully simple website in under 10 minutes.","tags":["Academic"],"title":"Academic: the website builder for Hugo","type":"post"},{"authors":["Nelson Bighetti","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including code and math.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"https://blog.codist.me/en/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/en/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":["Nelson Bighetti","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software.    Click the Slides button above to demo Academic\u0026rsquo;s Markdown slides feature.   Supplementary notes can be added here, including code and math.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"https://blog.codist.me/en/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/en/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example conference paper","type":"publication"}]